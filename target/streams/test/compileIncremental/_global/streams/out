[0m[[0m[0mdebug[0m] [0m[0m[zinc] IncrementalCompile -----------[0m
[0m[[0m[0mdebug[0m] [0m[0mIncrementalCompile.incrementalCompile[0m
[0m[[0m[0mdebug[0m] [0m[0mprevious = Stamps for: 9 products, 10 sources, 6 libraries[0m
[0m[[0m[0mdebug[0m] [0m[0mcurrent source = Set(${BASE}/src/test/scala/pipeline/MAtest.scala, ${BASE}/src/test/scala/pipeline/WBtest.scala, ${BASE}/src/test/scala/pipeline/IFtest.scala, ${BASE}/src/test/scala/pipeline/immGentest.scala, ${BASE}/src/test/scala/pipeline/IDtest.scala, ${BASE}/src/test/scala/gcd/GCDSpec.scala, ${BASE}/src/test/scala/pipeline/EXtest.scala)[0m
[0m[[0m[0mdebug[0m] [0m[0m> initialChanges = InitialChanges(Changes(added = Set(${BASE}/src/test/scala/pipeline/MAtest.scala, ${BASE}/src/test/scala/pipeline/IFtest.scala, ${BASE}/src/test/scala/pipeline/immGentest.scala, ${BASE}/src/test/scala/pipeline/IDtest.scala, ${BASE}/src/test/scala/pipeline/EXtest.scala, ${BASE}/src/test/scala/pipeline/WBtest.scala), removed = Set(${BASE}/src/test/scala/single_cycle/Controltest.scala, ${BASE}/src/test/scala/single_cycle/Datamemtest.scala, ${BASE}/src/test/scala/single_cycle/regfiletest.scala, ${BASE}/src/test/scala/single_cycle/pctest.scala, ${BASE}/src/test/scala/single_cycle/branchtest.scala, ${BASE}/src/test/scala/single_cycle/immGentest.scala, ${BASE}/src/test/scala/single_cycle/instr_memtest.scala, ${BASE}/src/test/scala/single_cycle/RV32Itest.scala, ${BASE}/src/test/scala/single_cycle/Alutest.scala), changed = Set(), unmodified = ...),Set(),Set(),API Changes: Set(NamesChange(single_cycle.Pc,ModifiedNames(changes = UsedName(_component,[Default]), UsedName(instanceName,[Default]), UsedName(toTarget,[Default]), UsedName(hasAutoSeed,[Default]), UsedName(getPorts,[Default]), UsedName(single_cycle;Pc;init;,[Default]), UsedName(forceAutoSeed,[Default]), UsedName(ne,[Default]), UsedName(getCommands,[Default]), UsedName(_bindIoInPlace,[Default]), UsedName(aluout,[Default]), UsedName(_compatIoPortBound,[Default]), UsedName(getPublicFields,[Default]), UsedName(pc_4out,[Default]), UsedName(portsSize,[Default]), UsedName(isClosed,[Default]), UsedName(portsContains,[Default]), UsedName(bindIoInPlace,[Default]), UsedName(compileOptions,[Default]), UsedName(reset,[Default]), UsedName(generateComponent,[Default]), UsedName(eq,[Default]), UsedName(_parent,[Default]), UsedName(_io,[Default]), UsedName(override_clock,[Default]), UsedName(_compatAutoWrapPorts,[Default]), UsedName($init$,[Default]), UsedName(nameIds,[Default]), UsedName(_namespace,[Default]), UsedName(setRef,[Default]), UsedName(override_reset,[Default]), UsedName(Pc,[Default]), UsedName(pc,[Default]), UsedName(autoSeed,[Default]), UsedName(getChiselPorts,[Default]), UsedName(clone,[Default]), UsedName(toString,[Default]), UsedName(wait,[Default]), UsedName(getIds,[Default]), UsedName(==,[Default]), UsedName(addAutoPostnameHook,[Default]), UsedName(toAbsoluteTarget,[Default]), UsedName(computeName,[Default]), UsedName(desiredName,[Default]), UsedName(##,[Default]), UsedName(closeUnboundIds,[Default]), UsedName(parentModName,[Default]), UsedName(clock,[Default]), UsedName(io,[Default]), UsedName(synchronized,[Default]), UsedName(circuitName,[Default]), UsedName(getRef,[Default]), UsedName(_id,[Default]), UsedName(getModulePorts,[Default]), UsedName(pcsel,[Default]), UsedName(notify,[Default]), UsedName(getOptionRef,[Default]), UsedName(finalize,[Default]), UsedName(forceName,[Default]), UsedName(hashCode,[Default]), UsedName(mkReset,[Default]), UsedName(getClass,[Default]), UsedName(notifyAll,[Default]), UsedName(IO,[Default]), UsedName(isInstanceOf,[Default]), UsedName(equals,[Default]), UsedName(seedOpt,[Default]), UsedName(_closed,[Default]), UsedName(asInstanceOf,[Default]), UsedName(namePorts,[Default]), UsedName(_onModuleClose,[Default]), UsedName(addSuggestPostnameHook,[Default]), UsedName(name,[Default]), UsedName(hasSeed,[Default]), UsedName(initializeInParent,[Default]), UsedName(addCommand,[Default]), UsedName(toNamed,[Default]), UsedName(suggestName,[Default]), UsedName(pc_out,[Default]), UsedName(parentPathName,[Default]), UsedName(!=,[Default]), UsedName(addId,[Default]), UsedName(pathName,[Default]))), NamesChange(single_cycle.Instr_mem,ModifiedNames(changes = UsedName(_component,[Default]), UsedName(instanceName,[Default]), UsedName(toTarget,[Default]), UsedName(hasAutoSeed,[Default]), UsedName(getPorts,[Default]), UsedName(forceAutoSeed,[Default]), UsedName(ne,[Default]), UsedName(getCommands,[Default]), UsedName(_bindIoInPlace,[Default]), UsedName(_compatIoPortBound,[Default]), UsedName(getPublicFields,[Default]), UsedName(portsSize,[Default]), UsedName(isClosed,[Default]), UsedName(portsContains,[Default]), UsedName(bindIoInPlace,[Default]), UsedName(compileOptions,[Default]), UsedName(reset,[Default]), UsedName(single_cycle;Instr_mem;init;,[Default]), UsedName(generateComponent,[Default]), UsedName(eq,[Default]), UsedName(_parent,[Default]), UsedName(_io,[Default]), UsedName(override_clock,[Default]), UsedName(_compatAutoWrapPorts,[Default]), UsedName($init$,[Default]), UsedName(nameIds,[Default]), UsedName(_namespace,[Default]), UsedName(setRef,[Default]), UsedName(override_reset,[Default]), UsedName(instruction,[Default]), UsedName(autoSeed,[Default]), UsedName(getChiselPorts,[Default]), UsedName(clone,[Default]), UsedName(toString,[Default]), UsedName(addr,[Default]), UsedName(wait,[Default]), UsedName(getIds,[Default]), UsedName(==,[Default]), UsedName(addAutoPostnameHook,[Default]), UsedName(toAbsoluteTarget,[Default]), UsedName(computeName,[Default]), UsedName(desiredName,[Default]), UsedName(mem,[Default]), UsedName(##,[Default]), UsedName(closeUnboundIds,[Default]), UsedName(parentModName,[Default]), UsedName(clock,[Default]), UsedName(io,[Default]), UsedName(Instr_mem,[Default]), UsedName(synchronized,[Default]), UsedName(circuitName,[Default]), UsedName(getRef,[Default]), UsedName(_id,[Default]), UsedName(getModulePorts,[Default]), UsedName(notify,[Default]), UsedName(getOptionRef,[Default]), UsedName(finalize,[Default]), UsedName(forceName,[Default]), UsedName(hashCode,[Default]), UsedName(mkReset,[Default]), UsedName(getClass,[Default]), UsedName(notifyAll,[Default]), UsedName(IO,[Default]), UsedName(isInstanceOf,[Default]), UsedName(equals,[Default]), UsedName(seedOpt,[Default]), UsedName(_closed,[Default]), UsedName(asInstanceOf,[Default]), UsedName(namePorts,[Default]), UsedName(_onModuleClose,[Default]), UsedName(addSuggestPostnameHook,[Default]), UsedName(name,[Default]), UsedName(hasSeed,[Default]), UsedName(initializeInParent,[Default]), UsedName(addCommand,[Default]), UsedName(toNamed,[Default]), UsedName(suggestName,[Default]), UsedName(parentPathName,[Default]), UsedName(!=,[Default]), UsedName(addId,[Default]), UsedName(pathName,[Default]))), NamesChange(single_cycle.Control,ModifiedNames(changes = UsedName(aluOP,[Default]), UsedName(_component,[Default]), UsedName(instanceName,[Default]), UsedName(toTarget,[Default]), UsedName(regWrEn,[Default]), UsedName(hasAutoSeed,[Default]), UsedName(getPorts,[Default]), UsedName(forceAutoSeed,[Default]), UsedName(ne,[Default]), UsedName(immGen,[Default]), UsedName(auipctype,[Default]), UsedName(getCommands,[Default]), UsedName(_bindIoInPlace,[Default]), UsedName(_compatIoPortBound,[Default]), UsedName(getPublicFields,[Default]), UsedName(portsSize,[Default]), UsedName(isClosed,[Default]), UsedName(portsContains,[Default]), UsedName(bindIoInPlace,[Default]), UsedName(compileOptions,[Default]), UsedName(reset,[Default]), UsedName(generateComponent,[Default]), UsedName(rd,[Default]), UsedName(jaltype,[Default]), UsedName(eq,[Default]), UsedName(_parent,[Default]), UsedName(_io,[Default]), UsedName(override_clock,[Default]), UsedName(rs1,[Default]), UsedName(_compatAutoWrapPorts,[Default]), UsedName($init$,[Default]), UsedName(nameIds,[Default]), UsedName(_namespace,[Default]), UsedName(setRef,[Default]), UsedName(func3,[Default]), UsedName(override_reset,[Default]), UsedName(branch,[Default]), UsedName(instruction,[Default]), UsedName(autoSeed,[Default]), UsedName(getChiselPorts,[Default]), UsedName(clone,[Default]), UsedName(toString,[Default]), UsedName(wait,[Default]), UsedName(getIds,[Default]), UsedName(==,[Default]), UsedName(memWrite,[Default]), UsedName(addAutoPostnameHook,[Default]), UsedName(toAbsoluteTarget,[Default]), UsedName(Control,[Default]), UsedName(rs2,[Default]), UsedName(computeName,[Default]), UsedName(desiredName,[Default]), UsedName(##,[Default]), UsedName(closeUnboundIds,[Default]), UsedName(parentModName,[Default]), UsedName(clock,[Default]), UsedName(io,[Default]), UsedName(synchronized,[Default]), UsedName(memRead,[Default]), UsedName(circuitName,[Default]), UsedName(getRef,[Default]), UsedName(_id,[Default]), UsedName(luitype,[Default]), UsedName(getModulePorts,[Default]), UsedName(single_cycle;Control;init;,[Default]), UsedName(pcsel,[Default]), UsedName(memToReg,[Default]), UsedName(notify,[Default]), UsedName(getOptionRef,[Default]), UsedName(finalize,[Default]), UsedName(forceName,[Default]), UsedName(hashCode,[Default]), UsedName(mkReset,[Default]), UsedName(getClass,[Default]), UsedName(notifyAll,[Default]), UsedName(IO,[Default]), UsedName(isInstanceOf,[Default]), UsedName(equals,[Default]), UsedName(seedOpt,[Default]), UsedName(_closed,[Default]), UsedName(asInstanceOf,[Default]), UsedName(namePorts,[Default]), UsedName(_onModuleClose,[Default]), UsedName(opcode,[Default]), UsedName(addSuggestPostnameHook,[Default]), UsedName(name,[Default]), UsedName(hasSeed,[Default]), UsedName(initializeInParent,[Default]), UsedName(imm,[Default]), UsedName(btaken,[Default]), UsedName(aluImm,[Default]), UsedName(addCommand,[Default]), UsedName(branchfun3,[Default]), UsedName(toNamed,[Default]), UsedName(suggestName,[Default]), UsedName(func7,[Default]), UsedName(parentPathName,[Default]), UsedName(!=,[Default]), UsedName(addId,[Default]), UsedName(pathName,[Default]), UsedName(jalrtype,[Default]))), NamesChange(single_cycle.RV32I,ModifiedNames(changes = UsedName(_component,[Default]), UsedName(instanceName,[Default]), UsedName(toTarget,[Default]), UsedName(hasAutoSeed,[Default]), UsedName(getPorts,[Default]), UsedName(forceAutoSeed,[Default]), UsedName(ne,[Default]), UsedName(getCommands,[Default]), UsedName(_bindIoInPlace,[Default]), UsedName(_compatIoPortBound,[Default]), UsedName(getPublicFields,[Default]), UsedName(portsSize,[Default]), UsedName(isClosed,[Default]), UsedName(portsContains,[Default]), UsedName(bindIoInPlace,[Default]), UsedName(compileOptions,[Default]), UsedName(reset,[Default]), UsedName(generateComponent,[Default]), UsedName(eq,[Default]), UsedName(_parent,[Default]), UsedName(_io,[Default]), UsedName(override_clock,[Default]), UsedName(_compatAutoWrapPorts,[Default]), UsedName($init$,[Default]), UsedName(nameIds,[Default]), UsedName(_namespace,[Default]), UsedName(setRef,[Default]), UsedName(override_reset,[Default]), UsedName(branch,[Default]), UsedName(control,[Default]), UsedName(pc,[Default]), UsedName(autoSeed,[Default]), UsedName(getChiselPorts,[Default]), UsedName(clone,[Default]), UsedName(toString,[Default]), UsedName(wait,[Default]), UsedName(getIds,[Default]), UsedName(==,[Default]), UsedName(addAutoPostnameHook,[Default]), UsedName(toAbsoluteTarget,[Default]), UsedName(computeName,[Default]), UsedName(desiredName,[Default]), UsedName(##,[Default]), UsedName(closeUnboundIds,[Default]), UsedName(RV32I,[Default]), UsedName(parentModName,[Default]), UsedName(clock,[Default]), UsedName(io,[Default]), UsedName(synchronized,[Default]), UsedName(circuitName,[Default]), UsedName(getRef,[Default]), UsedName(_id,[Default]), UsedName(instrMem,[Default]), UsedName(getModulePorts,[Default]), UsedName(notify,[Default]), UsedName(out,[Default]), UsedName(alu,[Default]), UsedName(getOptionRef,[Default]), UsedName(finalize,[Default]), UsedName(forceName,[Default]), UsedName(hashCode,[Default]), UsedName(mkReset,[Default]), UsedName(getClass,[Default]), UsedName(notifyAll,[Default]), UsedName(IO,[Default]), UsedName(datamem,[Default]), UsedName(isInstanceOf,[Default]), UsedName(equals,[Default]), UsedName(in,[Default]), UsedName(seedOpt,[Default]), UsedName(_closed,[Default]), UsedName(single_cycle;RV32I;init;,[Default]), UsedName(asInstanceOf,[Default]), UsedName(namePorts,[Default]), UsedName(_onModuleClose,[Default]), UsedName(regFile,[Default]), UsedName(addSuggestPostnameHook,[Default]), UsedName(name,[Default]), UsedName(hasSeed,[Default]), UsedName(initializeInParent,[Default]), UsedName(addCommand,[Default]), UsedName(toNamed,[Default]), UsedName(suggestName,[Default]), UsedName(parentPathName,[Default]), UsedName(!=,[Default]), UsedName(addId,[Default]), UsedName(pathName,[Default]))), NamesChange(single_cycle.ImmGen,ModifiedNames(changes = UsedName(_component,[Default]), UsedName(instanceName,[Default]), UsedName(toTarget,[Default]), UsedName(hasAutoSeed,[Default]), UsedName(getPorts,[Default]), UsedName(forceAutoSeed,[Default]), UsedName(ne,[Default]), UsedName(getCommands,[Default]), UsedName(wiree,[Default]), UsedName(_bindIoInPlace,[Default]), UsedName(_compatIoPortBound,[Default]), UsedName(getPublicFields,[Default]), UsedName(portsSize,[Default]), UsedName(isClosed,[Default]), UsedName(portsContains,[Default]), UsedName(bindIoInPlace,[Default]), UsedName(compileOptions,[Default]), UsedName(reset,[Default]), UsedName(generateComponent,[Default]), UsedName(eq,[Default]), UsedName(_parent,[Default]), UsedName(_io,[Default]), UsedName(override_clock,[Default]), UsedName(_compatAutoWrapPorts,[Default]), UsedName($init$,[Default]), UsedName(nameIds,[Default]), UsedName(_namespace,[Default]), UsedName(setRef,[Default]), UsedName(override_reset,[Default]), UsedName(instruction,[Default]), UsedName(autoSeed,[Default]), UsedName(getChiselPorts,[Default]), UsedName(clone,[Default]), UsedName(toString,[Default]), UsedName(wait,[Default]), UsedName(getIds,[Default]), UsedName(==,[Default]), UsedName(addAutoPostnameHook,[Default]), UsedName(toAbsoluteTarget,[Default]), UsedName(computeName,[Default]), UsedName(desiredName,[Default]), UsedName(##,[Default]), UsedName(closeUnboundIds,[Default]), UsedName(parentModName,[Default]), UsedName(clock,[Default]), UsedName(io,[Default]), UsedName(synchronized,[Default]), UsedName(circuitName,[Default]), UsedName(getRef,[Default]), UsedName(_id,[Default]), UsedName(getModulePorts,[Default]), UsedName(notify,[Default]), UsedName(getOptionRef,[Default]), UsedName(finalize,[Default]), UsedName(forceName,[Default]), UsedName(hashCode,[Default]), UsedName(mkReset,[Default]), UsedName(getClass,[Default]), UsedName(notifyAll,[Default]), UsedName(IO,[Default]), UsedName(isInstanceOf,[Default]), UsedName(equals,[Default]), UsedName(seedOpt,[Default]), UsedName(_closed,[Default]), UsedName(asInstanceOf,[Default]), UsedName(namePorts,[Default]), UsedName(_onModuleClose,[Default]), UsedName(opcode,[Default]), UsedName(single_cycle;ImmGen;init;,[Default]), UsedName(addSuggestPostnameHook,[Default]), UsedName(ImmGen,[Default]), UsedName(name,[Default]), UsedName(hasSeed,[Default]), UsedName(initializeInParent,[Default]), UsedName(addCommand,[Default]), UsedName(toNamed,[Default]), UsedName(suggestName,[Default]), UsedName(parentPathName,[Default]), UsedName(!=,[Default]), UsedName(addId,[Default]), UsedName(imm_val,[Default]), UsedName(pathName,[Default]))), NamesChange(single_cycle.ALU,ModifiedNames(changes = UsedName(_component,[Default]), UsedName(instanceName,[Default]), UsedName(toTarget,[Default]), UsedName(hasAutoSeed,[Default]), UsedName(getPorts,[Default]), UsedName(forceAutoSeed,[Default]), UsedName(ne,[Default]), UsedName(getCommands,[Default]), UsedName(_bindIoInPlace,[Default]), UsedName(single_cycle;ALU;init;,[Default]), UsedName(_compatIoPortBound,[Default]), UsedName(getPublicFields,[Default]), UsedName(portsSize,[Default]), UsedName(isClosed,[Default]), UsedName(portsContains,[Default]), UsedName(bindIoInPlace,[Default]), UsedName(compileOptions,[Default]), UsedName(reset,[Default]), UsedName(generateComponent,[Default]), UsedName(in_A,[Default]), UsedName(eq,[Default]), UsedName(cmp,[Default]), UsedName(_parent,[Default]), UsedName(_io,[Default]), UsedName(override_clock,[Default]), UsedName(_compatAutoWrapPorts,[Default]), UsedName($init$,[Default]), UsedName(nameIds,[Default]), UsedName(_namespace,[Default]), UsedName(setRef,[Default]), UsedName(override_reset,[Default]), UsedName(alu_Op,[Default]), UsedName(autoSeed,[Default]), UsedName(getChiselPorts,[Default]), UsedName(clone,[Default]), UsedName(toString,[Default]), UsedName(shiftl,[Default]), UsedName(wait,[Default]), UsedName(getIds,[Default]), UsedName(==,[Default]), UsedName(addAutoPostnameHook,[Default]), UsedName(toAbsoluteTarget,[Default]), UsedName(computeName,[Default]), UsedName(desiredName,[Default]), UsedName(##,[Default]), UsedName(closeUnboundIds,[Default]), UsedName(shin,[Default]), UsedName(parentModName,[Default]), UsedName(clock,[Default]), UsedName(io,[Default]), UsedName(synchronized,[Default]), UsedName(circuitName,[Default]), UsedName(getRef,[Default]), UsedName(_id,[Default]), UsedName(getModulePorts,[Default]), UsedName(in_B,[Default]), UsedName(notify,[Default]), UsedName(out,[Default]), UsedName(getOptionRef,[Default]), UsedName(finalize,[Default]), UsedName(forceName,[Default]), UsedName(hashCode,[Default]), UsedName(mkReset,[Default]), UsedName(getClass,[Default]), UsedName(notifyAll,[Default]), UsedName(IO,[Default]), UsedName(isInstanceOf,[Default]), UsedName(shiftr,[Default]), UsedName(equals,[Default]), UsedName(seedOpt,[Default]), UsedName(_closed,[Default]), UsedName(asInstanceOf,[Default]), UsedName(namePorts,[Default]), UsedName(_onModuleClose,[Default]), UsedName(addSuggestPostnameHook,[Default]), UsedName(name,[Default]), UsedName(hasSeed,[Default]), UsedName(initializeInParent,[Default]), UsedName(addCommand,[Default]), UsedName(toNamed,[Default]), UsedName(suggestName,[Default]), UsedName(ALU,[Default]), UsedName(parentPathName,[Default]), UsedName(shamt,[Default]), UsedName(sum,[Default]), UsedName(!=,[Default]), UsedName(addId,[Default]), UsedName(pathName,[Default]))), NamesChange(single_cycle.Branch,ModifiedNames(changes = UsedName(_component,[Default]), UsedName(instanceName,[Default]), UsedName(toTarget,[Default]), UsedName(hasAutoSeed,[Default]), UsedName(getPorts,[Default]), UsedName(forceAutoSeed,[Default]), UsedName(ne,[Default]), UsedName(getCommands,[Default]), UsedName(_bindIoInPlace,[Default]), UsedName(_compatIoPortBound,[Default]), UsedName(getPublicFields,[Default]), UsedName(portsSize,[Default]), UsedName(isClosed,[Default]), UsedName(portsContains,[Default]), UsedName(bindIoInPlace,[Default]), UsedName(compileOptions,[Default]), UsedName(reset,[Default]), UsedName(generateComponent,[Default]), UsedName(eq,[Default]), UsedName(_parent,[Default]), UsedName(_io,[Default]), UsedName(override_clock,[Default]), UsedName(_compatAutoWrapPorts,[Default]), UsedName($init$,[Default]), UsedName(nameIds,[Default]), UsedName(_namespace,[Default]), UsedName(setRef,[Default]), UsedName(override_reset,[Default]), UsedName(autoSeed,[Default]), UsedName(getChiselPorts,[Default]), UsedName(clone,[Default]), UsedName(toString,[Default]), UsedName(wait,[Default]), UsedName(getIds,[Default]), UsedName(==,[Default]), UsedName(addAutoPostnameHook,[Default]), UsedName(toAbsoluteTarget,[Default]), UsedName(computeName,[Default]), UsedName(desiredName,[Default]), UsedName(##,[Default]), UsedName(closeUnboundIds,[Default]), UsedName(parentModName,[Default]), UsedName(clock,[Default]), UsedName(io,[Default]), UsedName(synchronized,[Default]), UsedName(circuitName,[Default]), UsedName(getRef,[Default]), UsedName(_id,[Default]), UsedName(single_cycle;Branch;init;,[Default]), UsedName(getModulePorts,[Default]), UsedName(notify,[Default]), UsedName(getOptionRef,[Default]), UsedName(finalize,[Default]), UsedName(forceName,[Default]), UsedName(hashCode,[Default]), UsedName(mkReset,[Default]), UsedName(getClass,[Default]), UsedName(notifyAll,[Default]), UsedName(IO,[Default]), UsedName(isInstanceOf,[Default]), UsedName(equals,[Default]), UsedName(seedOpt,[Default]), UsedName(_closed,[Default]), UsedName(asInstanceOf,[Default]), UsedName(namePorts,[Default]), UsedName(_onModuleClose,[Default]), UsedName(addSuggestPostnameHook,[Default]), UsedName(name,[Default]), UsedName(hasSeed,[Default]), UsedName(initializeInParent,[Default]), UsedName(addCommand,[Default]), UsedName(toNamed,[Default]), UsedName(suggestName,[Default]), UsedName(Branch,[Default]), UsedName(parentPathName,[Default]), UsedName(!=,[Default]), UsedName(addId,[Default]), UsedName(pathName,[Default]))), NamesChange(single_cycle.regfile,ModifiedNames(changes = UsedName(_component,[Default]), UsedName(instanceName,[Default]), UsedName(toTarget,[Default]), UsedName(regfile,[Default]), UsedName(hasAutoSeed,[Default]), UsedName(getPorts,[Default]), UsedName(forceAutoSeed,[Default]), UsedName(ne,[Default]), UsedName(getCommands,[Default]), UsedName(_bindIoInPlace,[Default]), UsedName(_compatIoPortBound,[Default]), UsedName(getPublicFields,[Default]), UsedName(portsSize,[Default]), UsedName(isClosed,[Default]), UsedName(portsContains,[Default]), UsedName(bindIoInPlace,[Default]), UsedName(compileOptions,[Default]), UsedName(reset,[Default]), UsedName(generateComponent,[Default]), UsedName(eq,[Default]), UsedName(_parent,[Default]), UsedName(_io,[Default]), UsedName(override_clock,[Default]), UsedName(rs1,[Default]), UsedName(_compatAutoWrapPorts,[Default]), UsedName($init$,[Default]), UsedName(nameIds,[Default]), UsedName(_namespace,[Default]), UsedName(setRef,[Default]), UsedName(override_reset,[Default]), UsedName(writeData,[Default]), UsedName(autoSeed,[Default]), UsedName(getChiselPorts,[Default]), UsedName(clone,[Default]), UsedName(toString,[Default]), UsedName(wait,[Default]), UsedName(getIds,[Default]), UsedName(==,[Default]), UsedName(addAutoPostnameHook,[Default]), UsedName(toAbsoluteTarget,[Default]), UsedName(readAddr1,[Default]), UsedName(writeEnable,[Default]), UsedName(rs2,[Default]), UsedName(computeName,[Default]), UsedName(desiredName,[Default]), UsedName(##,[Default]), UsedName(closeUnboundIds,[Default]), UsedName(parentModName,[Default]), UsedName(clock,[Default]), UsedName(io,[Default]), UsedName(synchronized,[Default]), UsedName(circuitName,[Default]), UsedName(getRef,[Default]), UsedName(readAddr2,[Default]), UsedName(_id,[Default]), UsedName(getModulePorts,[Default]), UsedName(notify,[Default]), UsedName(getOptionRef,[Default]), UsedName(writeAddr,[Default]), UsedName(finalize,[Default]), UsedName(forceName,[Default]), UsedName(hashCode,[Default]), UsedName(mkReset,[Default]), UsedName(getClass,[Default]), UsedName(notifyAll,[Default]), UsedName(IO,[Default]), UsedName(isInstanceOf,[Default]), UsedName(equals,[Default]), UsedName(seedOpt,[Default]), UsedName(_closed,[Default]), UsedName(asInstanceOf,[Default]), UsedName(namePorts,[Default]), UsedName(_onModuleClose,[Default]), UsedName(regFile,[Default]), UsedName(addSuggestPostnameHook,[Default]), UsedName(name,[Default]), UsedName(hasSeed,[Default]), UsedName(initializeInParent,[Default]), UsedName(addCommand,[Default]), UsedName(single_cycle;regfile;init;,[Default]), UsedName(toNamed,[Default]), UsedName(suggestName,[Default]), UsedName(parentPathName,[Default]), UsedName(!=,[Default]), UsedName(addId,[Default]), UsedName(pathName,[Default]))), NamesChange(single_cycle.LM_IO_Interface_BranchControl,ModifiedNames(changes = UsedName(instanceName,[Default]), UsedName(toTarget,[Default]), UsedName(lref,[Default]), UsedName(getElements,[Default]), UsedName(hasAutoSeed,[Default]), UsedName(direction,[Default]), UsedName(forceAutoSeed,[Default]), UsedName(ne,[Default]), UsedName(specifiedDirection,[Default]), UsedName(toPrintableHelper,[Default]), UsedName(LM_IO_Interface_BranchControl,[Default]), UsedName(cloneTypeFull,[Default]), UsedName(litArg,[Default]), UsedName(getPublicFields,[Default]), UsedName(elements,[Default]), UsedName(x1,[Default]), UsedName(binding_=,[Default]), UsedName(eq,[Default]), UsedName(_parent,[Default]), UsedName(flatten,[Default]), UsedName($init$,[Default]), UsedName(litOption,[Default]), UsedName(setRef,[Default]), UsedName(badConnect,[Default]), UsedName(cloneType,[Default]), UsedName(topBinding,[Default]), UsedName(branch,[Default]), UsedName(x2,[Default]), UsedName(autoSeed,[Default]), UsedName(asUInt,[Default]), UsedName(clone,[Default]), UsedName(toString,[Default]), UsedName(typeEquivalent,[Default]), UsedName(wait,[Default]), UsedName(==,[Default]), UsedName(bind$default$2,[Default]), UsedName(isSynthesizable,[Default]), UsedName(addAutoPostnameHook,[Default]), UsedName(toAbsoluteTarget,[Default]), UsedName(specifiedDirection_=,[Default]), UsedName(litValue,[Default]), UsedName(computeName,[Default]), UsedName(:=,[Default]), UsedName(ignoreSeq,[Default]), UsedName(_usingPlugin,[Default]), UsedName(##,[Default]), UsedName(parentModName,[Default]), UsedName(single_cycle;LM_IO_Interface_BranchControl;init;,[Default]), UsedName(compileOptions,[Implicit]), UsedName(synchronized,[Default]), UsedName(_cloneTypeImpl,[Default]), UsedName(circuitName,[Default]), UsedName(getRef,[Default]), UsedName(_id,[Default]), UsedName(binding,[Default]), UsedName(isWidthKnown,[Default]), UsedName(fnct3,[Default]), UsedName(_makeLit,[Default]), UsedName(getWidth,[Default]), UsedName(notify,[Default]), UsedName(_assignCompatibilityExplicitDirection,[Default]), UsedName(<>,[Default]), UsedName(getOptionRef,[Default]), UsedName(finalize,[Default]), UsedName(connect,[Default]), UsedName(bulkConnect,[Default]), UsedName(forceName,[Default]), UsedName(hashCode,[Default]), UsedName(do_asTypeOf,[Default]), UsedName(br_taken,[Default]), UsedName(bind,[Default]), UsedName(getClass,[Default]), UsedName(notifyAll,[Default]), UsedName(isInstanceOf,[Default]), UsedName(className,[Default]), UsedName(ref,[Default]), UsedName(equals,[Default]), UsedName(seedOpt,[Default]), UsedName(asInstanceOf,[Default]), UsedName(do_asUInt,[Default]), UsedName(widthOption,[Default]), UsedName(asTypeOf,[Default]), UsedName(connectFromBits,[Default]), UsedName(topBindingOpt,[Default]), UsedName(_onModuleClose,[Default]), UsedName(bindingToString,[Default]), UsedName(isLit,[Default]), UsedName(addSuggestPostnameHook,[Default]), UsedName(hasSeed,[Default]), UsedName(toPrintable,[Default]), UsedName(legacyConnect,[Default]), UsedName(allElements,[Default]), UsedName(toNamed,[Default]), UsedName(suggestName,[Default]), UsedName(width,[Default]), UsedName(direction_=,[Default]), UsedName(parentPathName,[Default]), UsedName(!=,[Default]), UsedName(pathName,[Default])))))[0m
[0m[[0m[0mdebug[0m] [0m[0mThe single_cycle.Pc has the following regular definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName(_component,[Default]), UsedName(instanceName,[Default]), UsedName(toTarget,[Default]), UsedName(hasAutoSeed,[Default]), UsedName(getPorts,[Default]), UsedName(single_cycle;Pc;init;,[Default]), UsedName(forceAutoSeed,[Default]), UsedName(ne,[Default]), UsedName(getCommands,[Default]), UsedName(_bindIoInPlace,[Default]), UsedName(aluout,[Default]), UsedName(_compatIoPortBound,[Default]), UsedName(getPublicFields,[Default]), UsedName(pc_4out,[Default]), UsedName(portsSize,[Default]), UsedName(isClosed,[Default]), UsedName(portsContains,[Default]), UsedName(bindIoInPlace,[Default]), UsedName(compileOptions,[Default]), UsedName(reset,[Default]), UsedName(generateComponent,[Default]), UsedName(eq,[Default]), UsedName(_parent,[Default]), UsedName(_io,[Default]), UsedName(override_clock,[Default]), UsedName(_compatAutoWrapPorts,[Default]), UsedName($init$,[Default]), UsedName(nameIds,[Default]), UsedName(_namespace,[Default]), UsedName(setRef,[Default]), UsedName(override_reset,[Default]), UsedName(Pc,[Default]), UsedName(pc,[Default]), UsedName(autoSeed,[Default]), UsedName(getChiselPorts,[Default]), UsedName(clone,[Default]), UsedName(toString,[Default]), UsedName(wait,[Default]), UsedName(getIds,[Default]), UsedName(==,[Default]), UsedName(addAutoPostnameHook,[Default]), UsedName(toAbsoluteTarget,[Default]), UsedName(computeName,[Default]), UsedName(desiredName,[Default]), UsedName(##,[Default]), UsedName(closeUnboundIds,[Default]), UsedName(parentModName,[Default]), UsedName(clock,[Default]), UsedName(io,[Default]), UsedName(synchronized,[Default]), UsedName(circuitName,[Default]), UsedName(getRef,[Default]), UsedName(_id,[Default]), UsedName(getModulePorts,[Default]), UsedName(pcsel,[Default]), UsedName(notify,[Default]), UsedName(getOptionRef,[Default]), UsedName(finalize,[Default]), UsedName(forceName,[Default]), UsedName(hashCode,[Default]), UsedName(mkReset,[Default]), UsedName(getClass,[Default]), UsedName(notifyAll,[Default]), UsedName(IO,[Default]), UsedName(isInstanceOf,[Default]), UsedName(equals,[Default]), UsedName(seedOpt,[Default]), UsedName(_closed,[Default]), UsedName(asInstanceOf,[Default]), UsedName(namePorts,[Default]), UsedName(_onModuleClose,[Default]), UsedName(addSuggestPostnameHook,[Default]), UsedName(name,[Default]), UsedName(hasSeed,[Default]), UsedName(initializeInParent,[Default]), UsedName(addCommand,[Default]), UsedName(toNamed,[Default]), UsedName(suggestName,[Default]), UsedName(pc_out,[Default]), UsedName(parentPathName,[Default]), UsedName(!=,[Default]), UsedName(addId,[Default]), UsedName(pathName,[Default]).[0m
[0m[[0m[0mdebug[0m] [0m[0mAll member reference dependencies will be considered within this context.[0m
[0m[[0m[0mdebug[0m] [0m[0mFiles invalidated by inheriting from (external) single_cycle.Pc: Set()[0m
[0m[[0m[0mdebug[0m] [0m[0mNow invalidating by inheritance (internally).[0m
[0m[[0m[0mdebug[0m] [0m[0mGetting direct dependencies of all classes transitively invalidated by inheritance.[0m
[0m[[0m[0mdebug[0m] [0m[0mGetting classes that directly depend on (external) single_cycle.Pc.[0m
[0m[[0m[0mdebug[0m] [0m[0mThe following modified names cause invalidation of single_cycle.pctest: Set(UsedName(single_cycle;Pc;init;,[Default]), UsedName(aluout,[Default]), UsedName(Pc,[Default]), UsedName(clock,[Default]), UsedName(io,[Default]), UsedName(pcsel,[Default]), UsedName(pc_out,[Default]))[0m
[0m[[0m[0mdebug[0m] [0m[0mThe single_cycle.Instr_mem has the following regular definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName(_component,[Default]), UsedName(instanceName,[Default]), UsedName(toTarget,[Default]), UsedName(hasAutoSeed,[Default]), UsedName(getPorts,[Default]), UsedName(forceAutoSeed,[Default]), UsedName(ne,[Default]), UsedName(getCommands,[Default]), UsedName(_bindIoInPlace,[Default]), UsedName(_compatIoPortBound,[Default]), UsedName(getPublicFields,[Default]), UsedName(portsSize,[Default]), UsedName(isClosed,[Default]), UsedName(portsContains,[Default]), UsedName(bindIoInPlace,[Default]), UsedName(compileOptions,[Default]), UsedName(reset,[Default]), UsedName(single_cycle;Instr_mem;init;,[Default]), UsedName(generateComponent,[Default]), UsedName(eq,[Default]), UsedName(_parent,[Default]), UsedName(_io,[Default]), UsedName(override_clock,[Default]), UsedName(_compatAutoWrapPorts,[Default]), UsedName($init$,[Default]), UsedName(nameIds,[Default]), UsedName(_namespace,[Default]), UsedName(setRef,[Default]), UsedName(override_reset,[Default]), UsedName(instruction,[Default]), UsedName(autoSeed,[Default]), UsedName(getChiselPorts,[Default]), UsedName(clone,[Default]), UsedName(toString,[Default]), UsedName(addr,[Default]), UsedName(wait,[Default]), UsedName(getIds,[Default]), UsedName(==,[Default]), UsedName(addAutoPostnameHook,[Default]), UsedName(toAbsoluteTarget,[Default]), UsedName(computeName,[Default]), UsedName(desiredName,[Default]), UsedName(mem,[Default]), UsedName(##,[Default]), UsedName(closeUnboundIds,[Default]), UsedName(parentModName,[Default]), UsedName(clock,[Default]), UsedName(io,[Default]), UsedName(Instr_mem,[Default]), UsedName(synchronized,[Default]), UsedName(circuitName,[Default]), UsedName(getRef,[Default]), UsedName(_id,[Default]), UsedName(getModulePorts,[Default]), UsedName(notify,[Default]), UsedName(getOptionRef,[Default]), UsedName(finalize,[Default]), UsedName(forceName,[Default]), UsedName(hashCode,[Default]), UsedName(mkReset,[Default]), UsedName(getClass,[Default]), UsedName(notifyAll,[Default]), UsedName(IO,[Default]), UsedName(isInstanceOf,[Default]), UsedName(equals,[Default]), UsedName(seedOpt,[Default]), UsedName(_closed,[Default]), UsedName(asInstanceOf,[Default]), UsedName(namePorts,[Default]), UsedName(_onModuleClose,[Default]), UsedName(addSuggestPostnameHook,[Default]), UsedName(name,[Default]), UsedName(hasSeed,[Default]), UsedName(initializeInParent,[Default]), UsedName(addCommand,[Default]), UsedName(toNamed,[Default]), UsedName(suggestName,[Default]), UsedName(parentPathName,[Default]), UsedName(!=,[Default]), UsedName(addId,[Default]), UsedName(pathName,[Default]).[0m
[0m[[0m[0mdebug[0m] [0m[0mAll member reference dependencies will be considered within this context.[0m
[0m[[0m[0mdebug[0m] [0m[0mFiles invalidated by inheriting from (external) single_cycle.Instr_mem: Set()[0m
[0m[[0m[0mdebug[0m] [0m[0mNow invalidating by inheritance (internally).[0m
[0m[[0m[0mdebug[0m] [0m[0mGetting direct dependencies of all classes transitively invalidated by inheritance.[0m
[0m[[0m[0mdebug[0m] [0m[0mGetting classes that directly depend on (external) single_cycle.Instr_mem.[0m
[0m[[0m[0mdebug[0m] [0m[0mThe following modified names cause invalidation of single_cycle.instr_memtest: Set(UsedName(single_cycle;Instr_mem;init;,[Default]), UsedName(instruction,[Default]), UsedName(addr,[Default]), UsedName(clock,[Default]), UsedName(io,[Default]), UsedName(Instr_mem,[Default]))[0m
[0m[[0m[0mdebug[0m] [0m[0mThe single_cycle.Control has the following regular definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName(aluOP,[Default]), UsedName(_component,[Default]), UsedName(instanceName,[Default]), UsedName(toTarget,[Default]), UsedName(regWrEn,[Default]), UsedName(hasAutoSeed,[Default]), UsedName(getPorts,[Default]), UsedName(forceAutoSeed,[Default]), UsedName(ne,[Default]), UsedName(immGen,[Default]), UsedName(auipctype,[Default]), UsedName(getCommands,[Default]), UsedName(_bindIoInPlace,[Default]), UsedName(_compatIoPortBound,[Default]), UsedName(getPublicFields,[Default]), UsedName(portsSize,[Default]), UsedName(isClosed,[Default]), UsedName(portsContains,[Default]), UsedName(bindIoInPlace,[Default]), UsedName(compileOptions,[Default]), UsedName(reset,[Default]), UsedName(generateComponent,[Default]), UsedName(rd,[Default]), UsedName(jaltype,[Default]), UsedName(eq,[Default]), UsedName(_parent,[Default]), UsedName(_io,[Default]), UsedName(override_clock,[Default]), UsedName(rs1,[Default]), UsedName(_compatAutoWrapPorts,[Default]), UsedName($init$,[Default]), UsedName(nameIds,[Default]), UsedName(_namespace,[Default]), UsedName(setRef,[Default]), UsedName(func3,[Default]), UsedName(override_reset,[Default]), UsedName(branch,[Default]), UsedName(instruction,[Default]), UsedName(autoSeed,[Default]), UsedName(getChiselPorts,[Default]), UsedName(clone,[Default]), UsedName(toString,[Default]), UsedName(wait,[Default]), UsedName(getIds,[Default]), UsedName(==,[Default]), UsedName(memWrite,[Default]), UsedName(addAutoPostnameHook,[Default]), UsedName(toAbsoluteTarget,[Default]), UsedName(Control,[Default]), UsedName(rs2,[Default]), UsedName(computeName,[Default]), UsedName(desiredName,[Default]), UsedName(##,[Default]), UsedName(closeUnboundIds,[Default]), UsedName(parentModName,[Default]), UsedName(clock,[Default]), UsedName(io,[Default]), UsedName(synchronized,[Default]), UsedName(memRead,[Default]), UsedName(circuitName,[Default]), UsedName(getRef,[Default]), UsedName(_id,[Default]), UsedName(luitype,[Default]), UsedName(getModulePorts,[Default]), UsedName(single_cycle;Control;init;,[Default]), UsedName(pcsel,[Default]), UsedName(memToReg,[Default]), UsedName(notify,[Default]), UsedName(getOptionRef,[Default]), UsedName(finalize,[Default]), UsedName(forceName,[Default]), UsedName(hashCode,[Default]), UsedName(mkReset,[Default]), UsedName(getClass,[Default]), UsedName(notifyAll,[Default]), UsedName(IO,[Default]), UsedName(isInstanceOf,[Default]), UsedName(equals,[Default]), UsedName(seedOpt,[Default]), UsedName(_closed,[Default]), UsedName(asInstanceOf,[Default]), UsedName(namePorts,[Default]), UsedName(_onModuleClose,[Default]), UsedName(opcode,[Default]), UsedName(addSuggestPostnameHook,[Default]), UsedName(name,[Default]), UsedName(hasSeed,[Default]), UsedName(initializeInParent,[Default]), UsedName(imm,[Default]), UsedName(btaken,[Default]), UsedName(aluImm,[Default]), UsedName(addCommand,[Default]), UsedName(branchfun3,[Default]), UsedName(toNamed,[Default]), UsedName(suggestName,[Default]), UsedName(func7,[Default]), UsedName(parentPathName,[Default]), UsedName(!=,[Default]), UsedName(addId,[Default]), UsedName(pathName,[Default]), UsedName(jalrtype,[Default]).[0m
[0m[[0m[0mdebug[0m] [0m[0mAll member reference dependencies will be considered within this context.[0m
[0m[[0m[0mdebug[0m] [0m[0mFiles invalidated by inheriting from (external) single_cycle.Control: Set()[0m
[0m[[0m[0mdebug[0m] [0m[0mNow invalidating by inheritance (internally).[0m
[0m[[0m[0mdebug[0m] [0m[0mGetting direct dependencies of all classes transitively invalidated by inheritance.[0m
[0m[[0m[0mdebug[0m] [0m[0mGetting classes that directly depend on (external) single_cycle.Control.[0m
[0m[[0m[0mdebug[0m] [0m[0mThe following modified names cause invalidation of single_cycle.Controltest: Set(UsedName(aluOP,[Default]), UsedName(regWrEn,[Default]), UsedName(rd,[Default]), UsedName(rs1,[Default]), UsedName(branch,[Default]), UsedName(instruction,[Default]), UsedName(memWrite,[Default]), UsedName(Control,[Default]), UsedName(rs2,[Default]), UsedName(clock,[Default]), UsedName(io,[Default]), UsedName(memRead,[Default]), UsedName(single_cycle;Control;init;,[Default]), UsedName(pcsel,[Default]), UsedName(memToReg,[Default]), UsedName(imm,[Default]), UsedName(btaken,[Default]), UsedName(aluImm,[Default]), UsedName(branchfun3,[Default]))[0m
[0m[[0m[0mdebug[0m] [0m[0mThe single_cycle.RV32I has the following regular definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName(_component,[Default]), UsedName(instanceName,[Default]), UsedName(toTarget,[Default]), UsedName(hasAutoSeed,[Default]), UsedName(getPorts,[Default]), UsedName(forceAutoSeed,[Default]), UsedName(ne,[Default]), UsedName(getCommands,[Default]), UsedName(_bindIoInPlace,[Default]), UsedName(_compatIoPortBound,[Default]), UsedName(getPublicFields,[Default]), UsedName(portsSize,[Default]), UsedName(isClosed,[Default]), UsedName(portsContains,[Default]), UsedName(bindIoInPlace,[Default]), UsedName(compileOptions,[Default]), UsedName(reset,[Default]), UsedName(generateComponent,[Default]), UsedName(eq,[Default]), UsedName(_parent,[Default]), UsedName(_io,[Default]), UsedName(override_clock,[Default]), UsedName(_compatAutoWrapPorts,[Default]), UsedName($init$,[Default]), UsedName(nameIds,[Default]), UsedName(_namespace,[Default]), UsedName(setRef,[Default]), UsedName(override_reset,[Default]), UsedName(branch,[Default]), UsedName(control,[Default]), UsedName(pc,[Default]), UsedName(autoSeed,[Default]), UsedName(getChiselPorts,[Default]), UsedName(clone,[Default]), UsedName(toString,[Default]), UsedName(wait,[Default]), UsedName(getIds,[Default]), UsedName(==,[Default]), UsedName(addAutoPostnameHook,[Default]), UsedName(toAbsoluteTarget,[Default]), UsedName(computeName,[Default]), UsedName(desiredName,[Default]), UsedName(##,[Default]), UsedName(closeUnboundIds,[Default]), UsedName(RV32I,[Default]), UsedName(parentModName,[Default]), UsedName(clock,[Default]), UsedName(io,[Default]), UsedName(synchronized,[Default]), UsedName(circuitName,[Default]), UsedName(getRef,[Default]), UsedName(_id,[Default]), UsedName(instrMem,[Default]), UsedName(getModulePorts,[Default]), UsedName(notify,[Default]), UsedName(out,[Default]), UsedName(alu,[Default]), UsedName(getOptionRef,[Default]), UsedName(finalize,[Default]), UsedName(forceName,[Default]), UsedName(hashCode,[Default]), UsedName(mkReset,[Default]), UsedName(getClass,[Default]), UsedName(notifyAll,[Default]), UsedName(IO,[Default]), UsedName(datamem,[Default]), UsedName(isInstanceOf,[Default]), UsedName(equals,[Default]), UsedName(in,[Default]), UsedName(seedOpt,[Default]), UsedName(_closed,[Default]), UsedName(single_cycle;RV32I;init;,[Default]), UsedName(asInstanceOf,[Default]), UsedName(namePorts,[Default]), UsedName(_onModuleClose,[Default]), UsedName(regFile,[Default]), UsedName(addSuggestPostnameHook,[Default]), UsedName(name,[Default]), UsedName(hasSeed,[Default]), UsedName(initializeInParent,[Default]), UsedName(addCommand,[Default]), UsedName(toNamed,[Default]), UsedName(suggestName,[Default]), UsedName(parentPathName,[Default]), UsedName(!=,[Default]), UsedName(addId,[Default]), UsedName(pathName,[Default]).[0m
[0m[[0m[0mdebug[0m] [0m[0mAll member reference dependencies will be considered within this context.[0m
[0m[[0m[0mdebug[0m] [0m[0mFiles invalidated by inheriting from (external) single_cycle.RV32I: Set()[0m
[0m[[0m[0mdebug[0m] [0m[0mNow invalidating by inheritance (internally).[0m
[0m[[0m[0mdebug[0m] [0m[0mGetting direct dependencies of all classes transitively invalidated by inheritance.[0m
[0m[[0m[0mdebug[0m] [0m[0mGetting classes that directly depend on (external) single_cycle.RV32I.[0m
[0m[[0m[0mdebug[0m] [0m[0mThe following modified names cause invalidation of single_cycle.RV32Itest: Set(UsedName(RV32I,[Default]), UsedName(clock,[Default]), UsedName(io,[Default]), UsedName(out,[Default]), UsedName(in,[Default]), UsedName(single_cycle;RV32I;init;,[Default]))[0m
[0m[[0m[0mdebug[0m] [0m[0mThe single_cycle.ImmGen has the following regular definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName(_component,[Default]), UsedName(instanceName,[Default]), UsedName(toTarget,[Default]), UsedName(hasAutoSeed,[Default]), UsedName(getPorts,[Default]), UsedName(forceAutoSeed,[Default]), UsedName(ne,[Default]), UsedName(getCommands,[Default]), UsedName(wiree,[Default]), UsedName(_bindIoInPlace,[Default]), UsedName(_compatIoPortBound,[Default]), UsedName(getPublicFields,[Default]), UsedName(portsSize,[Default]), UsedName(isClosed,[Default]), UsedName(portsContains,[Default]), UsedName(bindIoInPlace,[Default]), UsedName(compileOptions,[Default]), UsedName(reset,[Default]), UsedName(generateComponent,[Default]), UsedName(eq,[Default]), UsedName(_parent,[Default]), UsedName(_io,[Default]), UsedName(override_clock,[Default]), UsedName(_compatAutoWrapPorts,[Default]), UsedName($init$,[Default]), UsedName(nameIds,[Default]), UsedName(_namespace,[Default]), UsedName(setRef,[Default]), UsedName(override_reset,[Default]), UsedName(instruction,[Default]), UsedName(autoSeed,[Default]), UsedName(getChiselPorts,[Default]), UsedName(clone,[Default]), UsedName(toString,[Default]), UsedName(wait,[Default]), UsedName(getIds,[Default]), UsedName(==,[Default]), UsedName(addAutoPostnameHook,[Default]), UsedName(toAbsoluteTarget,[Default]), UsedName(computeName,[Default]), UsedName(desiredName,[Default]), UsedName(##,[Default]), UsedName(closeUnboundIds,[Default]), UsedName(parentModName,[Default]), UsedName(clock,[Default]), UsedName(io,[Default]), UsedName(synchronized,[Default]), UsedName(circuitName,[Default]), UsedName(getRef,[Default]), UsedName(_id,[Default]), UsedName(getModulePorts,[Default]), UsedName(notify,[Default]), UsedName(getOptionRef,[Default]), UsedName(finalize,[Default]), UsedName(forceName,[Default]), UsedName(hashCode,[Default]), UsedName(mkReset,[Default]), UsedName(getClass,[Default]), UsedName(notifyAll,[Default]), UsedName(IO,[Default]), UsedName(isInstanceOf,[Default]), UsedName(equals,[Default]), UsedName(seedOpt,[Default]), UsedName(_closed,[Default]), UsedName(asInstanceOf,[Default]), UsedName(namePorts,[Default]), UsedName(_onModuleClose,[Default]), UsedName(opcode,[Default]), UsedName(single_cycle;ImmGen;init;,[Default]), UsedName(addSuggestPostnameHook,[Default]), UsedName(ImmGen,[Default]), UsedName(name,[Default]), UsedName(hasSeed,[Default]), UsedName(initializeInParent,[Default]), UsedName(addCommand,[Default]), UsedName(toNamed,[Default]), UsedName(suggestName,[Default]), UsedName(parentPathName,[Default]), UsedName(!=,[Default]), UsedName(addId,[Default]), UsedName(imm_val,[Default]), UsedName(pathName,[Default]).[0m
[0m[[0m[0mdebug[0m] [0m[0mAll member reference dependencies will be considered within this context.[0m
[0m[[0m[0mdebug[0m] [0m[0mFiles invalidated by inheriting from (external) single_cycle.ImmGen: Set()[0m
[0m[[0m[0mdebug[0m] [0m[0mNow invalidating by inheritance (internally).[0m
[0m[[0m[0mdebug[0m] [0m[0mGetting direct dependencies of all classes transitively invalidated by inheritance.[0m
[0m[[0m[0mdebug[0m] [0m[0mGetting classes that directly depend on (external) single_cycle.ImmGen.[0m
[0m[[0m[0mdebug[0m] [0m[0mThe following modified names cause invalidation of single_cycle.immGentest: Set(UsedName(instruction,[Default]), UsedName(clock,[Default]), UsedName(io,[Default]), UsedName(single_cycle;ImmGen;init;,[Default]), UsedName(ImmGen,[Default]), UsedName(imm_val,[Default]))[0m
[0m[[0m[0mdebug[0m] [0m[0mThe single_cycle.ALU has the following regular definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName(_component,[Default]), UsedName(instanceName,[Default]), UsedName(toTarget,[Default]), UsedName(hasAutoSeed,[Default]), UsedName(getPorts,[Default]), UsedName(forceAutoSeed,[Default]), UsedName(ne,[Default]), UsedName(getCommands,[Default]), UsedName(_bindIoInPlace,[Default]), UsedName(single_cycle;ALU;init;,[Default]), UsedName(_compatIoPortBound,[Default]), UsedName(getPublicFields,[Default]), UsedName(portsSize,[Default]), UsedName(isClosed,[Default]), UsedName(portsContains,[Default]), UsedName(bindIoInPlace,[Default]), UsedName(compileOptions,[Default]), UsedName(reset,[Default]), UsedName(generateComponent,[Default]), UsedName(in_A,[Default]), UsedName(eq,[Default]), UsedName(cmp,[Default]), UsedName(_parent,[Default]), UsedName(_io,[Default]), UsedName(override_clock,[Default]), UsedName(_compatAutoWrapPorts,[Default]), UsedName($init$,[Default]), UsedName(nameIds,[Default]), UsedName(_namespace,[Default]), UsedName(setRef,[Default]), UsedName(override_reset,[Default]), UsedName(alu_Op,[Default]), UsedName(autoSeed,[Default]), UsedName(getChiselPorts,[Default]), UsedName(clone,[Default]), UsedName(toString,[Default]), UsedName(shiftl,[Default]), UsedName(wait,[Default]), UsedName(getIds,[Default]), UsedName(==,[Default]), UsedName(addAutoPostnameHook,[Default]), UsedName(toAbsoluteTarget,[Default]), UsedName(computeName,[Default]), UsedName(desiredName,[Default]), UsedName(##,[Default]), UsedName(closeUnboundIds,[Default]), UsedName(shin,[Default]), UsedName(parentModName,[Default]), UsedName(clock,[Default]), UsedName(io,[Default]), UsedName(synchronized,[Default]), UsedName(circuitName,[Default]), UsedName(getRef,[Default]), UsedName(_id,[Default]), UsedName(getModulePorts,[Default]), UsedName(in_B,[Default]), UsedName(notify,[Default]), UsedName(out,[Default]), UsedName(getOptionRef,[Default]), UsedName(finalize,[Default]), UsedName(forceName,[Default]), UsedName(hashCode,[Default]), UsedName(mkReset,[Default]), UsedName(getClass,[Default]), UsedName(notifyAll,[Default]), UsedName(IO,[Default]), UsedName(isInstanceOf,[Default]), UsedName(shiftr,[Default]), UsedName(equals,[Default]), UsedName(seedOpt,[Default]), UsedName(_closed,[Default]), UsedName(asInstanceOf,[Default]), UsedName(namePorts,[Default]), UsedName(_onModuleClose,[Default]), UsedName(addSuggestPostnameHook,[Default]), UsedName(name,[Default]), UsedName(hasSeed,[Default]), UsedName(initializeInParent,[Default]), UsedName(addCommand,[Default]), UsedName(toNamed,[Default]), UsedName(suggestName,[Default]), UsedName(ALU,[Default]), UsedName(parentPathName,[Default]), UsedName(shamt,[Default]), UsedName(sum,[Default]), UsedName(!=,[Default]), UsedName(addId,[Default]), UsedName(pathName,[Default]).[0m
[0m[[0m[0mdebug[0m] [0m[0mAll member reference dependencies will be considered within this context.[0m
[0m[[0m[0mdebug[0m] [0m[0mFiles invalidated by inheriting from (external) single_cycle.ALU: Set()[0m
[0m[[0m[0mdebug[0m] [0m[0mNow invalidating by inheritance (internally).[0m
[0m[[0m[0mdebug[0m] [0m[0mGetting direct dependencies of all classes transitively invalidated by inheritance.[0m
[0m[[0m[0mdebug[0m] [0m[0mGetting classes that directly depend on (external) single_cycle.ALU.[0m
[0m[[0m[0mdebug[0m] [0m[0mThe following modified names cause invalidation of single_cycle.Alutest: Set(UsedName(single_cycle;ALU;init;,[Default]), UsedName(in_A,[Default]), UsedName(alu_Op,[Default]), UsedName(clock,[Default]), UsedName(io,[Default]), UsedName(in_B,[Default]), UsedName(out,[Default]), UsedName(ALU,[Default]), UsedName(sum,[Default]))[0m
[0m[[0m[0mdebug[0m] [0m[0mThe single_cycle.Branch has the following regular definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName(_component,[Default]), UsedName(instanceName,[Default]), UsedName(toTarget,[Default]), UsedName(hasAutoSeed,[Default]), UsedName(getPorts,[Default]), UsedName(forceAutoSeed,[Default]), UsedName(ne,[Default]), UsedName(getCommands,[Default]), UsedName(_bindIoInPlace,[Default]), UsedName(_compatIoPortBound,[Default]), UsedName(getPublicFields,[Default]), UsedName(portsSize,[Default]), UsedName(isClosed,[Default]), UsedName(portsContains,[Default]), UsedName(bindIoInPlace,[Default]), UsedName(compileOptions,[Default]), UsedName(reset,[Default]), UsedName(generateComponent,[Default]), UsedName(eq,[Default]), UsedName(_parent,[Default]), UsedName(_io,[Default]), UsedName(override_clock,[Default]), UsedName(_compatAutoWrapPorts,[Default]), UsedName($init$,[Default]), UsedName(nameIds,[Default]), UsedName(_namespace,[Default]), UsedName(setRef,[Default]), UsedName(override_reset,[Default]), UsedName(autoSeed,[Default]), UsedName(getChiselPorts,[Default]), UsedName(clone,[Default]), UsedName(toString,[Default]), UsedName(wait,[Default]), UsedName(getIds,[Default]), UsedName(==,[Default]), UsedName(addAutoPostnameHook,[Default]), UsedName(toAbsoluteTarget,[Default]), UsedName(computeName,[Default]), UsedName(desiredName,[Default]), UsedName(##,[Default]), UsedName(closeUnboundIds,[Default]), UsedName(parentModName,[Default]), UsedName(clock,[Default]), UsedName(io,[Default]), UsedName(synchronized,[Default]), UsedName(circuitName,[Default]), UsedName(getRef,[Default]), UsedName(_id,[Default]), UsedName(single_cycle;Branch;init;,[Default]), UsedName(getModulePorts,[Default]), UsedName(notify,[Default]), UsedName(getOptionRef,[Default]), UsedName(finalize,[Default]), UsedName(forceName,[Default]), UsedName(hashCode,[Default]), UsedName(mkReset,[Default]), UsedName(getClass,[Default]), UsedName(notifyAll,[Default]), UsedName(IO,[Default]), UsedName(isInstanceOf,[Default]), UsedName(equals,[Default]), UsedName(seedOpt,[Default]), UsedName(_closed,[Default]), UsedName(asInstanceOf,[Default]), UsedName(namePorts,[Default]), UsedName(_onModuleClose,[Default]), UsedName(addSuggestPostnameHook,[Default]), UsedName(name,[Default]), UsedName(hasSeed,[Default]), UsedName(initializeInParent,[Default]), UsedName(addCommand,[Default]), UsedName(toNamed,[Default]), UsedName(suggestName,[Default]), UsedName(Branch,[Default]), UsedName(parentPathName,[Default]), UsedName(!=,[Default]), UsedName(addId,[Default]), UsedName(pathName,[Default]).[0m
[0m[[0m[0mdebug[0m] [0m[0mAll member reference dependencies will be considered within this context.[0m
[0m[[0m[0mdebug[0m] [0m[0mFiles invalidated by inheriting from (external) single_cycle.Branch: Set()[0m
[0m[[0m[0mdebug[0m] [0m[0mNow invalidating by inheritance (internally).[0m
[0m[[0m[0mdebug[0m] [0m[0mGetting direct dependencies of all classes transitively invalidated by inheritance.[0m
[0m[[0m[0mdebug[0m] [0m[0mGetting classes that directly depend on (external) single_cycle.Branch.[0m
[0m[[0m[0mdebug[0m] [0m[0mThe following modified names cause invalidation of single_cycle.branchtest: Set(UsedName(clock,[Default]), UsedName(io,[Default]), UsedName(single_cycle;Branch;init;,[Default]), UsedName(Branch,[Default]))[0m
[0m[[0m[0mdebug[0m] [0m[0mThe single_cycle.regfile has the following regular definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName(_component,[Default]), UsedName(instanceName,[Default]), UsedName(toTarget,[Default]), UsedName(regfile,[Default]), UsedName(hasAutoSeed,[Default]), UsedName(getPorts,[Default]), UsedName(forceAutoSeed,[Default]), UsedName(ne,[Default]), UsedName(getCommands,[Default]), UsedName(_bindIoInPlace,[Default]), UsedName(_compatIoPortBound,[Default]), UsedName(getPublicFields,[Default]), UsedName(portsSize,[Default]), UsedName(isClosed,[Default]), UsedName(portsContains,[Default]), UsedName(bindIoInPlace,[Default]), UsedName(compileOptions,[Default]), UsedName(reset,[Default]), UsedName(generateComponent,[Default]), UsedName(eq,[Default]), UsedName(_parent,[Default]), UsedName(_io,[Default]), UsedName(override_clock,[Default]), UsedName(rs1,[Default]), UsedName(_compatAutoWrapPorts,[Default]), UsedName($init$,[Default]), UsedName(nameIds,[Default]), UsedName(_namespace,[Default]), UsedName(setRef,[Default]), UsedName(override_reset,[Default]), UsedName(writeData,[Default]), UsedName(autoSeed,[Default]), UsedName(getChiselPorts,[Default]), UsedName(clone,[Default]), UsedName(toString,[Default]), UsedName(wait,[Default]), UsedName(getIds,[Default]), UsedName(==,[Default]), UsedName(addAutoPostnameHook,[Default]), UsedName(toAbsoluteTarget,[Default]), UsedName(readAddr1,[Default]), UsedName(writeEnable,[Default]), UsedName(rs2,[Default]), UsedName(computeName,[Default]), UsedName(desiredName,[Default]), UsedName(##,[Default]), UsedName(closeUnboundIds,[Default]), UsedName(parentModName,[Default]), UsedName(clock,[Default]), UsedName(io,[Default]), UsedName(synchronized,[Default]), UsedName(circuitName,[Default]), UsedName(getRef,[Default]), UsedName(readAddr2,[Default]), UsedName(_id,[Default]), UsedName(getModulePorts,[Default]), UsedName(notify,[Default]), UsedName(getOptionRef,[Default]), UsedName(writeAddr,[Default]), UsedName(finalize,[Default]), UsedName(forceName,[Default]), UsedName(hashCode,[Default]), UsedName(mkReset,[Default]), UsedName(getClass,[Default]), UsedName(notifyAll,[Default]), UsedName(IO,[Default]), UsedName(isInstanceOf,[Default]), UsedName(equals,[Default]), UsedName(seedOpt,[Default]), UsedName(_closed,[Default]), UsedName(asInstanceOf,[Default]), UsedName(namePorts,[Default]), UsedName(_onModuleClose,[Default]), UsedName(regFile,[Default]), UsedName(addSuggestPostnameHook,[Default]), UsedName(name,[Default]), UsedName(hasSeed,[Default]), UsedName(initializeInParent,[Default]), UsedName(addCommand,[Default]), UsedName(single_cycle;regfile;init;,[Default]), UsedName(toNamed,[Default]), UsedName(suggestName,[Default]), UsedName(parentPathName,[Default]), UsedName(!=,[Default]), UsedName(addId,[Default]), UsedName(pathName,[Default]).[0m
[0m[[0m[0mdebug[0m] [0m[0mAll member reference dependencies will be considered within this context.[0m
[0m[[0m[0mdebug[0m] [0m[0mFiles invalidated by inheriting from (external) single_cycle.regfile: Set()[0m
[0m[[0m[0mdebug[0m] [0m[0mNow invalidating by inheritance (internally).[0m
[0m[[0m[0mdebug[0m] [0m[0mGetting direct dependencies of all classes transitively invalidated by inheritance.[0m
[0m[[0m[0mdebug[0m] [0m[0mGetting classes that directly depend on (external) single_cycle.regfile.[0m
[0m[[0m[0mdebug[0m] [0m[0mThe following modified names cause invalidation of single_cycle.regfiletest: Set(UsedName(regfile,[Default]), UsedName(rs1,[Default]), UsedName(writeData,[Default]), UsedName(readAddr1,[Default]), UsedName(writeEnable,[Default]), UsedName(rs2,[Default]), UsedName(clock,[Default]), UsedName(io,[Default]), UsedName(readAddr2,[Default]), UsedName(writeAddr,[Default]), UsedName(single_cycle;regfile;init;,[Default]))[0m
[0m[[0m[0mdebug[0m] [0m[0mThe single_cycle.LM_IO_Interface_BranchControl has the following implicit definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName(compileOptions,[Implicit]).[0m
[0m[[0m[0mdebug[0m] [0m[0mAll member reference dependencies will be considered within this context.[0m
[0m[[0m[0mdebug[0m] [0m[0mFiles invalidated by inheriting from (external) single_cycle.LM_IO_Interface_BranchControl: Set()[0m
[0m[[0m[0mdebug[0m] [0m[0mNow invalidating by inheritance (internally).[0m
[0m[[0m[0mdebug[0m] [0m[0mGetting direct dependencies of all classes transitively invalidated by inheritance.[0m
[0m[[0m[0mdebug[0m] [0m[0mGetting classes that directly depend on (external) single_cycle.LM_IO_Interface_BranchControl.[0m
[0m[[0m[0mdebug[0m] [0m[0mThe following member ref dependencies of single_cycle.LM_IO_Interface_BranchControl are invalidated:[0m
[0m[[0m[0mdebug[0m] [0m[0m	single_cycle.branchtest[0m
[0m[[0m[0mdebug[0m] [0m[0m[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial source changes:[0m
[0m[[0m[0mdebug[0m] [0m[0m	removed: Set(${BASE}/src/test/scala/single_cycle/RV32Itest.scala, ${BASE}/src/test/scala/single_cycle/instr_memtest.scala, ${BASE}/src/test/scala/single_cycle/Datamemtest.scala, ${BASE}/src/test/scala/single_cycle/Alutest.scala, ${BASE}/src/test/scala/single_cycle/branchtest.scala, ${BASE}/src/test/scala/single_cycle/immGentest.scala, ${BASE}/src/test/scala/single_cycle/Controltest.scala, ${BASE}/src/test/scala/single_cycle/pctest.scala, ${BASE}/src/test/scala/single_cycle/regfiletest.scala)[0m
[0m[[0m[0mdebug[0m] [0m[0m	added: Set(${BASE}/src/test/scala/pipeline/MAtest.scala, ${BASE}/src/test/scala/pipeline/WBtest.scala, ${BASE}/src/test/scala/pipeline/IFtest.scala, ${BASE}/src/test/scala/pipeline/immGentest.scala, ${BASE}/src/test/scala/pipeline/IDtest.scala, ${BASE}/src/test/scala/pipeline/EXtest.scala)[0m
[0m[[0m[0mdebug[0m] [0m[0m	modified: Set()[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated products: Set()[0m
[0m[[0m[0mdebug[0m] [0m[0mExternal API changes: API Changes: Set(NamesChange(single_cycle.Pc,ModifiedNames(changes = UsedName(_component,[Default]), UsedName(instanceName,[Default]), UsedName(toTarget,[Default]), UsedName(hasAutoSeed,[Default]), UsedName(getPorts,[Default]), UsedName(single_cycle;Pc;init;,[Default]), UsedName(forceAutoSeed,[Default]), UsedName(ne,[Default]), UsedName(getCommands,[Default]), UsedName(_bindIoInPlace,[Default]), UsedName(aluout,[Default]), UsedName(_compatIoPortBound,[Default]), UsedName(getPublicFields,[Default]), UsedName(pc_4out,[Default]), UsedName(portsSize,[Default]), UsedName(isClosed,[Default]), UsedName(portsContains,[Default]), UsedName(bindIoInPlace,[Default]), UsedName(compileOptions,[Default]), UsedName(reset,[Default]), UsedName(generateComponent,[Default]), UsedName(eq,[Default]), UsedName(_parent,[Default]), UsedName(_io,[Default]), UsedName(override_clock,[Default]), UsedName(_compatAutoWrapPorts,[Default]), UsedName($init$,[Default]), UsedName(nameIds,[Default]), UsedName(_namespace,[Default]), UsedName(setRef,[Default]), UsedName(override_reset,[Default]), UsedName(Pc,[Default]), UsedName(pc,[Default]), UsedName(autoSeed,[Default]), UsedName(getChiselPorts,[Default]), UsedName(clone,[Default]), UsedName(toString,[Default]), UsedName(wait,[Default]), UsedName(getIds,[Default]), UsedName(==,[Default]), UsedName(addAutoPostnameHook,[Default]), UsedName(toAbsoluteTarget,[Default]), UsedName(computeName,[Default]), UsedName(desiredName,[Default]), UsedName(##,[Default]), UsedName(closeUnboundIds,[Default]), UsedName(parentModName,[Default]), UsedName(clock,[Default]), UsedName(io,[Default]), UsedName(synchronized,[Default]), UsedName(circuitName,[Default]), UsedName(getRef,[Default]), UsedName(_id,[Default]), UsedName(getModulePorts,[Default]), UsedName(pcsel,[Default]), UsedName(notify,[Default]), UsedName(getOptionRef,[Default]), UsedName(finalize,[Default]), UsedName(forceName,[Default]), UsedName(hashCode,[Default]), UsedName(mkReset,[Default]), UsedName(getClass,[Default]), UsedName(notifyAll,[Default]), UsedName(IO,[Default]), UsedName(isInstanceOf,[Default]), UsedName(equals,[Default]), UsedName(seedOpt,[Default]), UsedName(_closed,[Default]), UsedName(asInstanceOf,[Default]), UsedName(namePorts,[Default]), UsedName(_onModuleClose,[Default]), UsedName(addSuggestPostnameHook,[Default]), UsedName(name,[Default]), UsedName(hasSeed,[Default]), UsedName(initializeInParent,[Default]), UsedName(addCommand,[Default]), UsedName(toNamed,[Default]), UsedName(suggestName,[Default]), UsedName(pc_out,[Default]), UsedName(parentPathName,[Default]), UsedName(!=,[Default]), UsedName(addId,[Default]), UsedName(pathName,[Default]))), NamesChange(single_cycle.Instr_mem,ModifiedNames(changes = UsedName(_component,[Default]), UsedName(instanceName,[Default]), UsedName(toTarget,[Default]), UsedName(hasAutoSeed,[Default]), UsedName(getPorts,[Default]), UsedName(forceAutoSeed,[Default]), UsedName(ne,[Default]), UsedName(getCommands,[Default]), UsedName(_bindIoInPlace,[Default]), UsedName(_compatIoPortBound,[Default]), UsedName(getPublicFields,[Default]), UsedName(portsSize,[Default]), UsedName(isClosed,[Default]), UsedName(portsContains,[Default]), UsedName(bindIoInPlace,[Default]), UsedName(compileOptions,[Default]), UsedName(reset,[Default]), UsedName(single_cycle;Instr_mem;init;,[Default]), UsedName(generateComponent,[Default]), UsedName(eq,[Default]), UsedName(_parent,[Default]), UsedName(_io,[Default]), UsedName(override_clock,[Default]), UsedName(_compatAutoWrapPorts,[Default]), UsedName($init$,[Default]), UsedName(nameIds,[Default]), UsedName(_namespace,[Default]), UsedName(setRef,[Default]), UsedName(override_reset,[Default]), UsedName(instruction,[Default]), UsedName(autoSeed,[Default]), UsedName(getChiselPorts,[Default]), UsedName(clone,[Default]), UsedName(toString,[Default]), UsedName(addr,[Default]), UsedName(wait,[Default]), UsedName(getIds,[Default]), UsedName(==,[Default]), UsedName(addAutoPostnameHook,[Default]), UsedName(toAbsoluteTarget,[Default]), UsedName(computeName,[Default]), UsedName(desiredName,[Default]), UsedName(mem,[Default]), UsedName(##,[Default]), UsedName(closeUnboundIds,[Default]), UsedName(parentModName,[Default]), UsedName(clock,[Default]), UsedName(io,[Default]), UsedName(Instr_mem,[Default]), UsedName(synchronized,[Default]), UsedName(circuitName,[Default]), UsedName(getRef,[Default]), UsedName(_id,[Default]), UsedName(getModulePorts,[Default]), UsedName(notify,[Default]), UsedName(getOptionRef,[Default]), UsedName(finalize,[Default]), UsedName(forceName,[Default]), UsedName(hashCode,[Default]), UsedName(mkReset,[Default]), UsedName(getClass,[Default]), UsedName(notifyAll,[Default]), UsedName(IO,[Default]), UsedName(isInstanceOf,[Default]), UsedName(equals,[Default]), UsedName(seedOpt,[Default]), UsedName(_closed,[Default]), UsedName(asInstanceOf,[Default]), UsedName(namePorts,[Default]), UsedName(_onModuleClose,[Default]), UsedName(addSuggestPostnameHook,[Default]), UsedName(name,[Default]), UsedName(hasSeed,[Default]), UsedName(initializeInParent,[Default]), UsedName(addCommand,[Default]), UsedName(toNamed,[Default]), UsedName(suggestName,[Default]), UsedName(parentPathName,[Default]), UsedName(!=,[Default]), UsedName(addId,[Default]), UsedName(pathName,[Default]))), NamesChange(single_cycle.Control,ModifiedNames(changes = UsedName(aluOP,[Default]), UsedName(_component,[Default]), UsedName(instanceName,[Default]), UsedName(toTarget,[Default]), UsedName(regWrEn,[Default]), UsedName(hasAutoSeed,[Default]), UsedName(getPorts,[Default]), UsedName(forceAutoSeed,[Default]), UsedName(ne,[Default]), UsedName(immGen,[Default]), UsedName(auipctype,[Default]), UsedName(getCommands,[Default]), UsedName(_bindIoInPlace,[Default]), UsedName(_compatIoPortBound,[Default]), UsedName(getPublicFields,[Default]), UsedName(portsSize,[Default]), UsedName(isClosed,[Default]), UsedName(portsContains,[Default]), UsedName(bindIoInPlace,[Default]), UsedName(compileOptions,[Default]), UsedName(reset,[Default]), UsedName(generateComponent,[Default]), UsedName(rd,[Default]), UsedName(jaltype,[Default]), UsedName(eq,[Default]), UsedName(_parent,[Default]), UsedName(_io,[Default]), UsedName(override_clock,[Default]), UsedName(rs1,[Default]), UsedName(_compatAutoWrapPorts,[Default]), UsedName($init$,[Default]), UsedName(nameIds,[Default]), UsedName(_namespace,[Default]), UsedName(setRef,[Default]), UsedName(func3,[Default]), UsedName(override_reset,[Default]), UsedName(branch,[Default]), UsedName(instruction,[Default]), UsedName(autoSeed,[Default]), UsedName(getChiselPorts,[Default]), UsedName(clone,[Default]), UsedName(toString,[Default]), UsedName(wait,[Default]), UsedName(getIds,[Default]), UsedName(==,[Default]), UsedName(memWrite,[Default]), UsedName(addAutoPostnameHook,[Default]), UsedName(toAbsoluteTarget,[Default]), UsedName(Control,[Default]), UsedName(rs2,[Default]), UsedName(computeName,[Default]), UsedName(desiredName,[Default]), UsedName(##,[Default]), UsedName(closeUnboundIds,[Default]), UsedName(parentModName,[Default]), UsedName(clock,[Default]), UsedName(io,[Default]), UsedName(synchronized,[Default]), UsedName(memRead,[Default]), UsedName(circuitName,[Default]), UsedName(getRef,[Default]), UsedName(_id,[Default]), UsedName(luitype,[Default]), UsedName(getModulePorts,[Default]), UsedName(single_cycle;Control;init;,[Default]), UsedName(pcsel,[Default]), UsedName(memToReg,[Default]), UsedName(notify,[Default]), UsedName(getOptionRef,[Default]), UsedName(finalize,[Default]), UsedName(forceName,[Default]), UsedName(hashCode,[Default]), UsedName(mkReset,[Default]), UsedName(getClass,[Default]), UsedName(notifyAll,[Default]), UsedName(IO,[Default]), UsedName(isInstanceOf,[Default]), UsedName(equals,[Default]), UsedName(seedOpt,[Default]), UsedName(_closed,[Default]), UsedName(asInstanceOf,[Default]), UsedName(namePorts,[Default]), UsedName(_onModuleClose,[Default]), UsedName(opcode,[Default]), UsedName(addSuggestPostnameHook,[Default]), UsedName(name,[Default]), UsedName(hasSeed,[Default]), UsedName(initializeInParent,[Default]), UsedName(imm,[Default]), UsedName(btaken,[Default]), UsedName(aluImm,[Default]), UsedName(addCommand,[Default]), UsedName(branchfun3,[Default]), UsedName(toNamed,[Default]), UsedName(suggestName,[Default]), UsedName(func7,[Default]), UsedName(parentPathName,[Default]), UsedName(!=,[Default]), UsedName(addId,[Default]), UsedName(pathName,[Default]), UsedName(jalrtype,[Default]))), NamesChange(single_cycle.RV32I,ModifiedNames(changes = UsedName(_component,[Default]), UsedName(instanceName,[Default]), UsedName(toTarget,[Default]), UsedName(hasAutoSeed,[Default]), UsedName(getPorts,[Default]), UsedName(forceAutoSeed,[Default]), UsedName(ne,[Default]), UsedName(getCommands,[Default]), UsedName(_bindIoInPlace,[Default]), UsedName(_compatIoPortBound,[Default]), UsedName(getPublicFields,[Default]), UsedName(portsSize,[Default]), UsedName(isClosed,[Default]), UsedName(portsContains,[Default]), UsedName(bindIoInPlace,[Default]), UsedName(compileOptions,[Default]), UsedName(reset,[Default]), UsedName(generateComponent,[Default]), UsedName(eq,[Default]), UsedName(_parent,[Default]), UsedName(_io,[Default]), UsedName(override_clock,[Default]), UsedName(_compatAutoWrapPorts,[Default]), UsedName($init$,[Default]), UsedName(nameIds,[Default]), UsedName(_namespace,[Default]), UsedName(setRef,[Default]), UsedName(override_reset,[Default]), UsedName(branch,[Default]), UsedName(control,[Default]), UsedName(pc,[Default]), UsedName(autoSeed,[Default]), UsedName(getChiselPorts,[Default]), UsedName(clone,[Default]), UsedName(toString,[Default]), UsedName(wait,[Default]), UsedName(getIds,[Default]), UsedName(==,[Default]), UsedName(addAutoPostnameHook,[Default]), UsedName(toAbsoluteTarget,[Default]), UsedName(computeName,[Default]), UsedName(desiredName,[Default]), UsedName(##,[Default]), UsedName(closeUnboundIds,[Default]), UsedName(RV32I,[Default]), UsedName(parentModName,[Default]), UsedName(clock,[Default]), UsedName(io,[Default]), UsedName(synchronized,[Default]), UsedName(circuitName,[Default]), UsedName(getRef,[Default]), UsedName(_id,[Default]), UsedName(instrMem,[Default]), UsedName(getModulePorts,[Default]), UsedName(notify,[Default]), UsedName(out,[Default]), UsedName(alu,[Default]), UsedName(getOptionRef,[Default]), UsedName(finalize,[Default]), UsedName(forceName,[Default]), UsedName(hashCode,[Default]), UsedName(mkReset,[Default]), UsedName(getClass,[Default]), UsedName(notifyAll,[Default]), UsedName(IO,[Default]), UsedName(datamem,[Default]), UsedName(isInstanceOf,[Default]), UsedName(equals,[Default]), UsedName(in,[Default]), UsedName(seedOpt,[Default]), UsedName(_closed,[Default]), UsedName(single_cycle;RV32I;init;,[Default]), UsedName(asInstanceOf,[Default]), UsedName(namePorts,[Default]), UsedName(_onModuleClose,[Default]), UsedName(regFile,[Default]), UsedName(addSuggestPostnameHook,[Default]), UsedName(name,[Default]), UsedName(hasSeed,[Default]), UsedName(initializeInParent,[Default]), UsedName(addCommand,[Default]), UsedName(toNamed,[Default]), UsedName(suggestName,[Default]), UsedName(parentPathName,[Default]), UsedName(!=,[Default]), UsedName(addId,[Default]), UsedName(pathName,[Default]))), NamesChange(single_cycle.ImmGen,ModifiedNames(changes = UsedName(_component,[Default]), UsedName(instanceName,[Default]), UsedName(toTarget,[Default]), UsedName(hasAutoSeed,[Default]), UsedName(getPorts,[Default]), UsedName(forceAutoSeed,[Default]), UsedName(ne,[Default]), UsedName(getCommands,[Default]), UsedName(wiree,[Default]), UsedName(_bindIoInPlace,[Default]), UsedName(_compatIoPortBound,[Default]), UsedName(getPublicFields,[Default]), UsedName(portsSize,[Default]), UsedName(isClosed,[Default]), UsedName(portsContains,[Default]), UsedName(bindIoInPlace,[Default]), UsedName(compileOptions,[Default]), UsedName(reset,[Default]), UsedName(generateComponent,[Default]), UsedName(eq,[Default]), UsedName(_parent,[Default]), UsedName(_io,[Default]), UsedName(override_clock,[Default]), UsedName(_compatAutoWrapPorts,[Default]), UsedName($init$,[Default]), UsedName(nameIds,[Default]), UsedName(_namespace,[Default]), UsedName(setRef,[Default]), UsedName(override_reset,[Default]), UsedName(instruction,[Default]), UsedName(autoSeed,[Default]), UsedName(getChiselPorts,[Default]), UsedName(clone,[Default]), UsedName(toString,[Default]), UsedName(wait,[Default]), UsedName(getIds,[Default]), UsedName(==,[Default]), UsedName(addAutoPostnameHook,[Default]), UsedName(toAbsoluteTarget,[Default]), UsedName(computeName,[Default]), UsedName(desiredName,[Default]), UsedName(##,[Default]), UsedName(closeUnboundIds,[Default]), UsedName(parentModName,[Default]), UsedName(clock,[Default]), UsedName(io,[Default]), UsedName(synchronized,[Default]), UsedName(circuitName,[Default]), UsedName(getRef,[Default]), UsedName(_id,[Default]), UsedName(getModulePorts,[Default]), UsedName(notify,[Default]), UsedName(getOptionRef,[Default]), UsedName(finalize,[Default]), UsedName(forceName,[Default]), UsedName(hashCode,[Default]), UsedName(mkReset,[Default]), UsedName(getClass,[Default]), UsedName(notifyAll,[Default]), UsedName(IO,[Default]), UsedName(isInstanceOf,[Default]), UsedName(equals,[Default]), UsedName(seedOpt,[Default]), UsedName(_closed,[Default]), UsedName(asInstanceOf,[Default]), UsedName(namePorts,[Default]), UsedName(_onModuleClose,[Default]), UsedName(opcode,[Default]), UsedName(single_cycle;ImmGen;init;,[Default]), UsedName(addSuggestPostnameHook,[Default]), UsedName(ImmGen,[Default]), UsedName(name,[Default]), UsedName(hasSeed,[Default]), UsedName(initializeInParent,[Default]), UsedName(addCommand,[Default]), UsedName(toNamed,[Default]), UsedName(suggestName,[Default]), UsedName(parentPathName,[Default]), UsedName(!=,[Default]), UsedName(addId,[Default]), UsedName(imm_val,[Default]), UsedName(pathName,[Default]))), NamesChange(single_cycle.ALU,ModifiedNames(changes = UsedName(_component,[Default]), UsedName(instanceName,[Default]), UsedName(toTarget,[Default]), UsedName(hasAutoSeed,[Default]), UsedName(getPorts,[Default]), UsedName(forceAutoSeed,[Default]), UsedName(ne,[Default]), UsedName(getCommands,[Default]), UsedName(_bindIoInPlace,[Default]), UsedName(single_cycle;ALU;init;,[Default]), UsedName(_compatIoPortBound,[Default]), UsedName(getPublicFields,[Default]), UsedName(portsSize,[Default]), UsedName(isClosed,[Default]), UsedName(portsContains,[Default]), UsedName(bindIoInPlace,[Default]), UsedName(compileOptions,[Default]), UsedName(reset,[Default]), UsedName(generateComponent,[Default]), UsedName(in_A,[Default]), UsedName(eq,[Default]), UsedName(cmp,[Default]), UsedName(_parent,[Default]), UsedName(_io,[Default]), UsedName(override_clock,[Default]), UsedName(_compatAutoWrapPorts,[Default]), UsedName($init$,[Default]), UsedName(nameIds,[Default]), UsedName(_namespace,[Default]), UsedName(setRef,[Default]), UsedName(override_reset,[Default]), UsedName(alu_Op,[Default]), UsedName(autoSeed,[Default]), UsedName(getChiselPorts,[Default]), UsedName(clone,[Default]), UsedName(toString,[Default]), UsedName(shiftl,[Default]), UsedName(wait,[Default]), UsedName(getIds,[Default]), UsedName(==,[Default]), UsedName(addAutoPostnameHook,[Default]), UsedName(toAbsoluteTarget,[Default]), UsedName(computeName,[Default]), UsedName(desiredName,[Default]), UsedName(##,[Default]), UsedName(closeUnboundIds,[Default]), UsedName(shin,[Default]), UsedName(parentModName,[Default]), UsedName(clock,[Default]), UsedName(io,[Default]), UsedName(synchronized,[Default]), UsedName(circuitName,[Default]), UsedName(getRef,[Default]), UsedName(_id,[Default]), UsedName(getModulePorts,[Default]), UsedName(in_B,[Default]), UsedName(notify,[Default]), UsedName(out,[Default]), UsedName(getOptionRef,[Default]), UsedName(finalize,[Default]), UsedName(forceName,[Default]), UsedName(hashCode,[Default]), UsedName(mkReset,[Default]), UsedName(getClass,[Default]), UsedName(notifyAll,[Default]), UsedName(IO,[Default]), UsedName(isInstanceOf,[Default]), UsedName(shiftr,[Default]), UsedName(equals,[Default]), UsedName(seedOpt,[Default]), UsedName(_closed,[Default]), UsedName(asInstanceOf,[Default]), UsedName(namePorts,[Default]), UsedName(_onModuleClose,[Default]), UsedName(addSuggestPostnameHook,[Default]), UsedName(name,[Default]), UsedName(hasSeed,[Default]), UsedName(initializeInParent,[Default]), UsedName(addCommand,[Default]), UsedName(toNamed,[Default]), UsedName(suggestName,[Default]), UsedName(ALU,[Default]), UsedName(parentPathName,[Default]), UsedName(shamt,[Default]), UsedName(sum,[Default]), UsedName(!=,[Default]), UsedName(addId,[Default]), UsedName(pathName,[Default]))), NamesChange(single_cycle.Branch,ModifiedNames(changes = UsedName(_component,[Default]), UsedName(instanceName,[Default]), UsedName(toTarget,[Default]), UsedName(hasAutoSeed,[Default]), UsedName(getPorts,[Default]), UsedName(forceAutoSeed,[Default]), UsedName(ne,[Default]), UsedName(getCommands,[Default]), UsedName(_bindIoInPlace,[Default]), UsedName(_compatIoPortBound,[Default]), UsedName(getPublicFields,[Default]), UsedName(portsSize,[Default]), UsedName(isClosed,[Default]), UsedName(portsContains,[Default]), UsedName(bindIoInPlace,[Default]), UsedName(compileOptions,[Default]), UsedName(reset,[Default]), UsedName(generateComponent,[Default]), UsedName(eq,[Default]), UsedName(_parent,[Default]), UsedName(_io,[Default]), UsedName(override_clock,[Default]), UsedName(_compatAutoWrapPorts,[Default]), UsedName($init$,[Default]), UsedName(nameIds,[Default]), UsedName(_namespace,[Default]), UsedName(setRef,[Default]), UsedName(override_reset,[Default]), UsedName(autoSeed,[Default]), UsedName(getChiselPorts,[Default]), UsedName(clone,[Default]), UsedName(toString,[Default]), UsedName(wait,[Default]), UsedName(getIds,[Default]), UsedName(==,[Default]), UsedName(addAutoPostnameHook,[Default]), UsedName(toAbsoluteTarget,[Default]), UsedName(computeName,[Default]), UsedName(desiredName,[Default]), UsedName(##,[Default]), UsedName(closeUnboundIds,[Default]), UsedName(parentModName,[Default]), UsedName(clock,[Default]), UsedName(io,[Default]), UsedName(synchronized,[Default]), UsedName(circuitName,[Default]), UsedName(getRef,[Default]), UsedName(_id,[Default]), UsedName(single_cycle;Branch;init;,[Default]), UsedName(getModulePorts,[Default]), UsedName(notify,[Default]), UsedName(getOptionRef,[Default]), UsedName(finalize,[Default]), UsedName(forceName,[Default]), UsedName(hashCode,[Default]), UsedName(mkReset,[Default]), UsedName(getClass,[Default]), UsedName(notifyAll,[Default]), UsedName(IO,[Default]), UsedName(isInstanceOf,[Default]), UsedName(equals,[Default]), UsedName(seedOpt,[Default]), UsedName(_closed,[Default]), UsedName(asInstanceOf,[Default]), UsedName(namePorts,[Default]), UsedName(_onModuleClose,[Default]), UsedName(addSuggestPostnameHook,[Default]), UsedName(name,[Default]), UsedName(hasSeed,[Default]), UsedName(initializeInParent,[Default]), UsedName(addCommand,[Default]), UsedName(toNamed,[Default]), UsedName(suggestName,[Default]), UsedName(Branch,[Default]), UsedName(parentPathName,[Default]), UsedName(!=,[Default]), UsedName(addId,[Default]), UsedName(pathName,[Default]))), NamesChange(single_cycle.regfile,ModifiedNames(changes = UsedName(_component,[Default]), UsedName(instanceName,[Default]), UsedName(toTarget,[Default]), UsedName(regfile,[Default]), UsedName(hasAutoSeed,[Default]), UsedName(getPorts,[Default]), UsedName(forceAutoSeed,[Default]), UsedName(ne,[Default]), UsedName(getCommands,[Default]), UsedName(_bindIoInPlace,[Default]), UsedName(_compatIoPortBound,[Default]), UsedName(getPublicFields,[Default]), UsedName(portsSize,[Default]), UsedName(isClosed,[Default]), UsedName(portsContains,[Default]), UsedName(bindIoInPlace,[Default]), UsedName(compileOptions,[Default]), UsedName(reset,[Default]), UsedName(generateComponent,[Default]), UsedName(eq,[Default]), UsedName(_parent,[Default]), UsedName(_io,[Default]), UsedName(override_clock,[Default]), UsedName(rs1,[Default]), UsedName(_compatAutoWrapPorts,[Default]), UsedName($init$,[Default]), UsedName(nameIds,[Default]), UsedName(_namespace,[Default]), UsedName(setRef,[Default]), UsedName(override_reset,[Default]), UsedName(writeData,[Default]), UsedName(autoSeed,[Default]), UsedName(getChiselPorts,[Default]), UsedName(clone,[Default]), UsedName(toString,[Default]), UsedName(wait,[Default]), UsedName(getIds,[Default]), UsedName(==,[Default]), UsedName(addAutoPostnameHook,[Default]), UsedName(toAbsoluteTarget,[Default]), UsedName(readAddr1,[Default]), UsedName(writeEnable,[Default]), UsedName(rs2,[Default]), UsedName(computeName,[Default]), UsedName(desiredName,[Default]), UsedName(##,[Default]), UsedName(closeUnboundIds,[Default]), UsedName(parentModName,[Default]), UsedName(clock,[Default]), UsedName(io,[Default]), UsedName(synchronized,[Default]), UsedName(circuitName,[Default]), UsedName(getRef,[Default]), UsedName(readAddr2,[Default]), UsedName(_id,[Default]), UsedName(getModulePorts,[Default]), UsedName(notify,[Default]), UsedName(getOptionRef,[Default]), UsedName(writeAddr,[Default]), UsedName(finalize,[Default]), UsedName(forceName,[Default]), UsedName(hashCode,[Default]), UsedName(mkReset,[Default]), UsedName(getClass,[Default]), UsedName(notifyAll,[Default]), UsedName(IO,[Default]), UsedName(isInstanceOf,[Default]), UsedName(equals,[Default]), UsedName(seedOpt,[Default]), UsedName(_closed,[Default]), UsedName(asInstanceOf,[Default]), UsedName(namePorts,[Default]), UsedName(_onModuleClose,[Default]), UsedName(regFile,[Default]), UsedName(addSuggestPostnameHook,[Default]), UsedName(name,[Default]), UsedName(hasSeed,[Default]), UsedName(initializeInParent,[Default]), UsedName(addCommand,[Default]), UsedName(single_cycle;regfile;init;,[Default]), UsedName(toNamed,[Default]), UsedName(suggestName,[Default]), UsedName(parentPathName,[Default]), UsedName(!=,[Default]), UsedName(addId,[Default]), UsedName(pathName,[Default]))), NamesChange(single_cycle.LM_IO_Interface_BranchControl,ModifiedNames(changes = UsedName(instanceName,[Default]), UsedName(toTarget,[Default]), UsedName(lref,[Default]), UsedName(getElements,[Default]), UsedName(hasAutoSeed,[Default]), UsedName(direction,[Default]), UsedName(forceAutoSeed,[Default]), UsedName(ne,[Default]), UsedName(specifiedDirection,[Default]), UsedName(toPrintableHelper,[Default]), UsedName(LM_IO_Interface_BranchControl,[Default]), UsedName(cloneTypeFull,[Default]), UsedName(litArg,[Default]), UsedName(getPublicFields,[Default]), UsedName(elements,[Default]), UsedName(x1,[Default]), UsedName(binding_=,[Default]), UsedName(eq,[Default]), UsedName(_parent,[Default]), UsedName(flatten,[Default]), UsedName($init$,[Default]), UsedName(litOption,[Default]), UsedName(setRef,[Default]), UsedName(badConnect,[Default]), UsedName(cloneType,[Default]), UsedName(topBinding,[Default]), UsedName(branch,[Default]), UsedName(x2,[Default]), UsedName(autoSeed,[Default]), UsedName(asUInt,[Default]), UsedName(clone,[Default]), UsedName(toString,[Default]), UsedName(typeEquivalent,[Default]), UsedName(wait,[Default]), UsedName(==,[Default]), UsedName(bind$default$2,[Default]), UsedName(isSynthesizable,[Default]), UsedName(addAutoPostnameHook,[Default]), UsedName(toAbsoluteTarget,[Default]), UsedName(specifiedDirection_=,[Default]), UsedName(litValue,[Default]), UsedName(computeName,[Default]), UsedName(:=,[Default]), UsedName(ignoreSeq,[Default]), UsedName(_usingPlugin,[Default]), UsedName(##,[Default]), UsedName(parentModName,[Default]), UsedName(single_cycle;LM_IO_Interface_BranchControl;init;,[Default]), UsedName(compileOptions,[Implicit]), UsedName(synchronized,[Default]), UsedName(_cloneTypeImpl,[Default]), UsedName(circuitName,[Default]), UsedName(getRef,[Default]), UsedName(_id,[Default]), UsedName(binding,[Default]), UsedName(isWidthKnown,[Default]), UsedName(fnct3,[Default]), UsedName(_makeLit,[Default]), UsedName(getWidth,[Default]), UsedName(notify,[Default]), UsedName(_assignCompatibilityExplicitDirection,[Default]), UsedName(<>,[Default]), UsedName(getOptionRef,[Default]), UsedName(finalize,[Default]), UsedName(connect,[Default]), UsedName(bulkConnect,[Default]), UsedName(forceName,[Default]), UsedName(hashCode,[Default]), UsedName(do_asTypeOf,[Default]), UsedName(br_taken,[Default]), UsedName(bind,[Default]), UsedName(getClass,[Default]), UsedName(notifyAll,[Default]), UsedName(isInstanceOf,[Default]), UsedName(className,[Default]), UsedName(ref,[Default]), UsedName(equals,[Default]), UsedName(seedOpt,[Default]), UsedName(asInstanceOf,[Default]), UsedName(do_asUInt,[Default]), UsedName(widthOption,[Default]), UsedName(asTypeOf,[Default]), UsedName(connectFromBits,[Default]), UsedName(topBindingOpt,[Default]), UsedName(_onModuleClose,[Default]), UsedName(bindingToString,[Default]), UsedName(isLit,[Default]), UsedName(addSuggestPostnameHook,[Default]), UsedName(hasSeed,[Default]), UsedName(toPrintable,[Default]), UsedName(legacyConnect,[Default]), UsedName(allElements,[Default]), UsedName(toNamed,[Default]), UsedName(suggestName,[Default]), UsedName(width,[Default]), UsedName(direction_=,[Default]), UsedName(parentPathName,[Default]), UsedName(!=,[Default]), UsedName(pathName,[Default]))))[0m
[0m[[0m[0mdebug[0m] [0m[0mModified binary dependencies: Set()[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial directly invalidated classes: Set(single_cycle.Controltest, single_cycle.regfiletest, single_cycle.pctest, single_cycle.Alutest, single_cycle.branchtest, single_cycle.RV32Itest, single_cycle.instr_memtest, single_cycle.immGentest)[0m
[0m[[0m[0mdebug[0m] [0m[0mSources indirectly invalidated by:[0m
[0m[[0m[0mdebug[0m] [0m[0m	product: Set()[0m
[0m[[0m[0mdebug[0m] [0m[0m	binary dep: Set()[0m
[0m[[0m[0mdebug[0m] [0m[0m	external source: Set(single_cycle.Controltest, single_cycle.regfiletest, single_cycle.pctest, single_cycle.Alutest, single_cycle.branchtest, single_cycle.RV32Itest, single_cycle.instr_memtest, single_cycle.immGentest)[0m
[0m[[0m[0mdebug[0m] [0m[0mAll initially invalidated classes: Set(single_cycle.Controltest, single_cycle.regfiletest, single_cycle.pctest, single_cycle.Alutest, single_cycle.branchtest, single_cycle.RV32Itest, single_cycle.instr_memtest, single_cycle.immGentest)[0m
[0m[[0m[0mdebug[0m] [0m[0mAll initially invalidated sources:Set(${BASE}/src/test/scala/pipeline/MAtest.scala, ${BASE}/src/test/scala/pipeline/WBtest.scala, ${BASE}/src/test/scala/pipeline/IFtest.scala, ${BASE}/src/test/scala/pipeline/immGentest.scala, ${BASE}/src/test/scala/pipeline/IDtest.scala, ${BASE}/src/test/scala/pipeline/EXtest.scala)[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: single_cycle.Controltest, single_cycle.regfiletest, single_cycle.pctest, single_cycle.Alutest, single_cycle.branchtest, single_cycle.RV32Itest, single_cycle.instr_memtest, single_cycle.immGentest[0m
[0m[[0m[0mdebug[0m] [0m[0mRecompiling all sources: number of invalidated sources > 50.0% of all sources[0m
[0m[[0m[0mdebug[0m] [0m[0mcompilation cycle 1[0m
[0m[[0m[0minfo[0m] [0m[0mcompiling 7 Scala sources to /home/kinzaa/Desktop/5-stage-pipeline-RV32I/target/scala-2.12/test-classes ...[0m
[0m[[0m[0mdebug[0m] [0m[0mGetting org.scala-sbt:compiler-bridge_2.12:1.4.4:compile for Scala 2.12.13[0m
[0m[[0m[0mdebug[0m] [0m[0m[zinc] Running cached compiler 573de08a for Scala compiler version 2.12.13[0m
[0m[[0m[0mdebug[0m] [0m[0m[zinc] The Scala compiler is invoked with:[0m
[0m[[0m[0mdebug[0m] [0m[0m	-Xsource:2.11[0m
[0m[[0m[0mdebug[0m] [0m[0m	-language:reflectiveCalls[0m
[0m[[0m[0mdebug[0m] [0m[0m	-deprecation[0m
[0m[[0m[0mdebug[0m] [0m[0m	-feature[0m
[0m[[0m[0mdebug[0m] [0m[0m	-Xcheckinit[0m
[0m[[0m[0mdebug[0m] [0m[0m	-P:chiselplugin:useBundlePlugin[0m
[0m[[0m[0mdebug[0m] [0m[0m	-Xplugin:/home/kinzaa/.cache/coursier/v1/https/repo1.maven.org/maven2/edu/berkeley/cs/chisel3-plugin_2.12.13/3.4.3/chisel3-plugin_2.12.13-3.4.3.jar[0m
[0m[[0m[0mdebug[0m] [0m[0m	-Xplugin:/home/kinzaa/.cache/coursier/v1/https/repo1.maven.org/maven2/org/scalamacros/paradise_2.12.13/2.1.1/paradise_2.12.13-2.1.1.jar[0m
[0m[[0m[0mdebug[0m] [0m[0m	-bootclasspath[0m
[0m[[0m[0mdebug[0m] [0m[0m	/home/kinzaa/.cache/coursier/v1/https/repo1.maven.org/maven2/org/scala-lang/scala-library/2.12.13/scala-library-2.12.13.jar[0m
[0m[[0m[0mdebug[0m] [0m[0m	-classpath[0m
[0m[[0m[0mdebug[0m] [0m[0m	/home/kinzaa/Desktop/5-stage-pipeline-RV32I/target/scala-2.12/test-classes:/home/kinzaa/Desktop/5-stage-pipeline-RV32I/target/scala-2.12/classes:/home/kinzaa/.cache/coursier/v1/https/repo1.maven.org/maven2/edu/berkeley/cs/chisel3_2.12/3.4.3/chisel3_2.12-3.4.3.jar:/home/kinzaa/.cache/coursier/v1/https/repo1.maven.org/maven2/edu/berkeley/cs/chiseltest_2.12/0.3.3/chiseltest_2.12-0.3.3.jar:/home/kinzaa/.cache/coursier/v1/https/repo1.maven.org/maven2/edu/berkeley/cs/chisel3-macros_2.12/3.4.3/chisel3-macros_2.12-3.4.3.jar:/home/kinzaa/.cache/coursier/v1/https/repo1.maven.org/maven2/edu/berkeley/cs/chisel3-core_2.12/3.4.3/chisel3-core_2.12-3.4.3.jar:/home/kinzaa/.cache/coursier/v1/https/repo1.maven.org/maven2/org/scala-lang/scala-reflect/2.12.13/scala-reflect-2.12.13.jar:/home/kinzaa/.cache/coursier/v1/https/repo1.maven.org/maven2/com/github/scopt/scopt_2.12/3.7.1/scopt_2.12-3.7.1.jar:/home/kinzaa/.cache/coursier/v1/https/repo1.maven.org/maven2/org/scalatest/scalatest_2.12/3.0.8/scalatest_2.12-3.0.8.jar:/home/kinzaa/.cache/coursier/v1/https/repo1.maven.org/maven2/com/lihaoyi/utest_2.12/0.6.7/utest_2.12-0.6.7.jar:/home/kinzaa/.cache/coursier/v1/https/repo1.maven.org/maven2/edu/berkeley/cs/treadle_2.12/1.3.3/treadle_2.12-1.3.3.jar:/home/kinzaa/.cache/coursier/v1/https/repo1.maven.org/maven2/edu/berkeley/cs/firrtl_2.12/1.4.3/firrtl_2.12-1.4.3.jar:/home/kinzaa/.cache/coursier/v1/https/repo1.maven.org/maven2/org/scalactic/scalactic_2.12/3.0.8/scalactic_2.12-3.0.8.jar:/home/kinzaa/.cache/coursier/v1/https/repo1.maven.org/maven2/org/scala-lang/modules/scala-xml_2.12/1.2.0/scala-xml_2.12-1.2.0.jar:/home/kinzaa/.cache/coursier/v1/https/repo1.maven.org/maven2/org/scala-sbt/test-interface/1.0/test-interface-1.0.jar:/home/kinzaa/.cache/coursier/v1/https/repo1.maven.org/maven2/org/portable-scala/portable-scala-reflect_2.12/0.1.0/portable-scala-reflect_2.12-0.1.0.jar:/home/kinzaa/.cache/coursier/v1/https/repo1.maven.org/maven2/org/scala-lang/modules/scala-jline/2.12.1/scala-jline-2.12.1.jar:/home/kinzaa/.cache/coursier/v1/https/repo1.maven.org/maven2/org/json4s/json4s-native_2.12/3.6.9/json4s-native_2.12-3.6.9.jar:/home/kinzaa/.cache/coursier/v1/https/repo1.maven.org/maven2/org/antlr/antlr4-runtime/4.7.1/antlr4-runtime-4.7.1.jar:/home/kinzaa/.cache/coursier/v1/https/repo1.maven.org/maven2/com/google/protobuf/protobuf-java/3.9.0/protobuf-java-3.9.0.jar:/home/kinzaa/.cache/coursier/v1/https/repo1.maven.org/maven2/net/jcazevedo/moultingyaml_2.12/0.4.2/moultingyaml_2.12-0.4.2.jar:/home/kinzaa/.cache/coursier/v1/https/repo1.maven.org/maven2/org/apache/commons/commons-text/1.8/commons-text-1.8.jar:/home/kinzaa/.cache/coursier/v1/https/repo1.maven.org/maven2/org/fusesource/jansi/jansi/1.11/jansi-1.11.jar:/home/kinzaa/.cache/coursier/v1/https/repo1.maven.org/maven2/org/json4s/json4s-core_2.12/3.6.9/json4s-core_2.12-3.6.9.jar:/home/kinzaa/.cache/coursier/v1/https/repo1.maven.org/maven2/com/github/nscala-time/nscala-time_2.12/2.22.0/nscala-time_2.12-2.22.0.jar:/home/kinzaa/.cache/coursier/v1/https/repo1.maven.org/maven2/org/yaml/snakeyaml/1.26/snakeyaml-1.26.jar:/home/kinzaa/.cache/coursier/v1/https/repo1.maven.org/maven2/org/apache/commons/commons-lang3/3.9/commons-lang3-3.9.jar:/home/kinzaa/.cache/coursier/v1/https/repo1.maven.org/maven2/org/json4s/json4s-ast_2.12/3.6.9/json4s-ast_2.12-3.6.9.jar:/home/kinzaa/.cache/coursier/v1/https/repo1.maven.org/maven2/org/json4s/json4s-scalap_2.12/3.6.9/json4s-scalap_2.12-3.6.9.jar:/home/kinzaa/.cache/coursier/v1/https/repo1.maven.org/maven2/com/thoughtworks/paranamer/paranamer/2.8/paranamer-2.8.jar:/home/kinzaa/.cache/coursier/v1/https/repo1.maven.org/maven2/joda-time/joda-time/2.10.1/joda-time-2.10.1.jar:/home/kinzaa/.cache/coursier/v1/https/repo1.maven.org/maven2/org/joda/joda-convert/2.2.0/joda-convert-2.2.0.jar[0m
[0m[[0m[0mdebug[0m] [0m[0mScala compilation took 2.983944391 s[0m
[0m[[0m[0mdebug[0m] [0m[0mdone compiling[0m
